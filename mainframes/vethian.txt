--@name Vethian AI
--@author Nova Astral
--@updater STEAM_0:0:53930685
--@dependency STEAM_0:0:53930685 Novas-SFs/library/nova_lib.txt
--@model models/beer/wiremod/gate_e2.mdl
---@model models/beer/wiremod/gate_e2_mini.mdl
--@class emitter
--@shared

if SERVER then --really, don't touch this

AIVersion = "2.3.9" -- Don't touch this
require("Novas-SFs/library/nova_lib.txt") -- Don't touch this 2: electric boogaloo.

--[[
Made by Nova Astral
Discord: novaastral
Steam: http://steamcommunity.com/profiles/76561198068127098
Github: https://github.com/NovaAstral/Novas-Public-SFs

Thank you to Princess Nova and The17thDoctor for help figuring out some functions of SF

This is the docs on command usage:
https://docs.google.com/document/d/1O2u7H4LFrC73PP-RpSY7yRGR4XEydbntwioRyLWV7Gk/

If you want to make a suggestion/bug report,
You can ping me on the TSCM Community Discord, or use the github issues section
]]--

--This is the custom config setup, change these if you'd like
function config()
    wire.ports.WarpFactor = 10 --This is the starting warp factor

    GateCol = 1 --Set this to 0 if you don't want your stargate event horizon to change colors on alert

    PrintOnSpawn = 1 --Set this to 0 to stop printing to faction on e2 spawn

    Shipname = "Shipname" --Change this to the name of your ship

    AutoTarget =  1 --If Target destroyed, try to target another of the same entity owned by the same person
    AutoTargetPrint = 1 --Print in chat when AutoTarget targets a new entity
    TargetLeading = 0 --Default value for target leading, can be changed with /t lead
    AimFixed = 0 --If the mainframe should automatically aim fixed wepaons like the Ship Cannon and Keeper Emitter

    CmdSound = 0 --If you want Vethian to audibly say the outputs of commands (WIP!)

    ALinkWarn = 1 --If you want to be warned when an autolink fails because of a missing entity

    --AutoDistress = 1 --Disable this if you don't want your ship to send a distress call at low hull
    --AutoDistressAmount = 30 --% of hull to send autodistress at
    --AutoDistressAlliance = 0 --Set to 1 to send autodistress to alliance, 0 to faction
    --This isn't implemented yet

    Prefix = "/v" --Set this to the prefix you need to enter first in chat for any commands
    WarpPrefix = "/warp" --This is the prefix for using the warp drive
    TPPrefix = "/pad" --This is the prefix for using the transporter
    TargetPrefix = "/t" --This is the prefix for using the targetting system
    --These must be 1 word, you cannot do for example: "/v warp"

    wire.ports.WepStrength = 10 --I would set these lower if you dont have alot of resources
    wire.ports.WepRate = 10 --You can set these with commands (wrate, wstrength) though

    AlertGreen = Color(0,0,0):ToVector() * 255 --Alert colors for the light outputs
    AlertBlue = Color(0,0,255):ToVector() * 255
    AlertRed = Color(255,0,0):ToVector() * 255
    AlertBlack = Color(255,255,255):ToVector() * 255
end

function nameCheck()
    if(PrintOnSpawn == 1) then
        if(Shipname == "Shipname") then
            aiSay(sfowner,"Shipname not set. Set it on [",ColRed,"Line 38",ColOng,"] of this mainframe")
        else
            chat.say(ColPink,"[",AIName,"] ",ColTeam,AIName,ColGrn," v",AIVersion,ColOng," active",ColOng," on: ",ZeiaMBlu,Shipname)
        end
    else
        if(Shipname == "Shipname") then
            aiSay(sfowner,"Shipname not set. Set it on [",ColRed,"Line 36",ColOng,"] of this mainframe")
        else
            aiSay(sfowner,"[",AIName,"] ",ColGrn," v",AIVersion,ColOng," active on: ",ZeiaMBlu,Shipname)
        end
    end

    if(IsValid(LSCore) ~= true) then
        aiSay(sfowner,ColRed,"Life Support Core not linked, cannot set ship name!")
    else
        LSCoreW["Name"] = Shipname
    end
end

function functionSetup()
    wire.ports.Active = 1

    AlertLight = 0

    timer.create("AlertLightTimer",1,0,function()
        AlertLight = notVar(AlertLight)

        if(AlertLight == 1) then
            for k,v in pairs(AlertLights) do
                v:getWirelink()["GlowBrightness"] = 5
            end
        else
            for k,v in pairs(AlertLights) do
                v:getWirelink()["GlowBrightness"] = 0
            end
        end
    end)

    timer.stop("AlertLightTimer")

    function disableEnt(Active)
        timer.create("disableEntToggle",5,1,function()
            AimEW["Activate"] = Active

            if(Active == 1) then
                aiSay(sfowner,"Re-enabling the ",ColGrn,AimName)
            else
                aiSay(sfowner,"Re-disabling the ",ColGrn,AimName)
            end
        end)
    end

    PrevPos = Vector(0,0,0) --This is supposed to be here
    function warp(WarpVec,Ang)
        if(WarpVec == Vector(0,0,0)) then
            aiSay(sfowner,"Cannot warp to ",ColGrn,"[0,0,0]")
        else
            if(stargate.locationJammed(WarpVec)) then
                aiSay(sfowner,"Destination Jammed! Cannot warp.")
            else
                PrevPos = wire.ports.Drive:entity():pos()
                PrevAng = wire.ports.Drive:entity():ang()

                wire.ports.Drive[DestInput] = WarpVec
                wire.ports.Drive[AngInput] = Ang
                wire.ports.Destination = WarpVec
                wire.ports.AngleOffset = Ang

                --Warp
                timer.simple(0.2,function()
                    wire.ports.Warp = 1
                    wire.ports.Drive[WarpInput] = 1
                end)

                --Reset Warp
                timer.simple(2,function()
                    wire.ports.Warp = 0
                    wire.ports.Destination = Vector(0,0,0)
                    wire.ports.Drive[WarpInput] = 0
                    wire.ports.Drive[DestInput] = Vector(0,0,0)
                    wire.ports.AngOffset = Angle(0,0,0)

                    WarpF = 0
                end)
            end
        end
    end

    function transport(Ent,Pos,BeamType)
        if(wire.ports.Transporter:entity():class() == "transporter_pad") then
            PadTarget = "Target1"
            PadDest = "TargetLocation"

            if(BeamType == "vector") then
                PadBeam = "Beam to vector"
            end

            if(BeamType == "beamup") then
                PadBeam = "Energise pad"
            end

            if(BeamType == "beamdown") then
                PadBeam = "Beam from pads"
            end
        end
        if(wire.ports.Transporter:entity():class() == "asgard_transporter") then
            PadTarget = "Target"
            PadDest = "Destination"

            if(BeamType == "Vector") then
                PadBeam = "Send"
            end

            if(BeamType == "beamup") then
                PadBeam = "Retrieve"
            end

            if(BeamType == "beamdown") then
                PadBeam = "Send"
            end
        end

        TransBeamType = BeamType

        wire.ports.Transporter[PadTarget] = Ent
        wire.ports.Transporter[PadDest] = Pos

        --Beam
        timer.simple(0.01,function()
            wire.ports.Transporter[PadBeam] = 1
        end)
        --Reset Beam
        timer.simple(1,function()
            wire.ports.Transporter[PadTarget] = ents.NULL_ENTITY
            wire.ports.Transporter[PadDest] = Vector(0,0,0)
            wire.ports.Transporter[PadBeam] = 0
        end)
    end

    function jamCheck(Ent,Pos,PadCheck)
        local JamYes = 1
        local JamNo = 0

        if(IsValid(Ent) and Ent:isPlayer()) then
            PlyJam = Ent
        else
            PlyJam = false
        end

        if(stargate.locationJammed(Pos, PlyJam)) then
            if(Ent:isPlayer()) then
                if(Ent == sfowner) then
                    aiSay(sfowner,Ent:getTeamColor(),"You",ColOng," are ",ColRed,"Jammed!")
                else
                    aiSay(sfowner,Ent:getTeamColor(),Ent:name(),ColOng," is ",ColRed,"Jammed!")
                end
            else
                if(Ent == BrigEnt) then
                    aiSay(sfowner,"The ",ColGrn,"Brig",ColOng," is ",ColRed,"Jammed!")
                else
                    aiSay(sfowner,"That ",ColGrn,Ent:getName(),ColOng," is ",ColRed,"Jammed!")
                end
            end

            return JamYes
        else
            return JamNo
        end

        if(PadCheck == 1) then
            if(stargate.locationJammed(wire.ports.Transporter:entity():pos(),false)) then
                aiSay(sfowner,"The ",ColGrn,"Transporter",ColOng," is ",ColRed,"Jammed!")
                return JamYes
            else
                return JamNo
            end
        end
    end


    hook.add("input","DriveChange", function(input)
        if(input == "Drive" and DCWait == 0) then
            if(IsValid(wire.ports.Drive)) then
                DriveType = wire.ports.Drive:entity():class()
                DriveOffset = wire.ports.Drive:entity():ang()

                if(DriveType == "ship_drive" or DriveType == "bsg_drive" or DriveType == "st_warp_drive" or DriveType == "sg_hyperdrive" or DriveType == "spore_drive" or DriveType == "quantum_slipstream_drive") then
                    DestInput = "Destination"
                    WarpInput = "Activate"
                    AngInput = "Angle Offset"

                    aiSay(sfowner,"TSCM Drive Linked.")

                elseif(DriveType == "gmod_wire_hoverdrivecontroler" or DriveType == "gmod_wire_teleporter") then
                    DestInput = "TargetPos"
                    WarpInput = "Jump"

                    aiSay(sfowner,"Wire Drive Linked")

                elseif(DriveType == "warpdrive") then --SBEP Warp Drive
                    DestInput = "Destination"
                    WarpInput = "Warp"
                    AngInput = ""

                    aiSay(sfowner,"SBEPDrive Linked")

                elseif(DriveType == "st_shuttle_type11") then
                    DestInput = "Transwarp Destination"
                    WarpInput = "Transwarp"

                    aiSay(sfowner,ColOng,"Type 11 Shuttle Linked")

                elseif(DriveType == "st_shuttle_type9" or DriveType == "st_shuttle_type6") then
                    DestInput = "Warp Destination"
                    WarpInput = "Engage Warp"

                    aiSay(sfowner,ColOng,"Shuttle Linked")

                elseif(DriveType == "sci_fi_shuttle") then
                    DestInput = "FTL Co-ordinates"
                    WarpInput = "FTL Jump"

                    aiSay(sfowner,ColOng,"Sci-fi Shuttle Linked")

                elseif(DriveType == "sent_tardis_interior" or DriveType == "sent_tardis") then
                    DestInput = "XYZ"
                    WarpInput = "Demat"

                    aiSay(sfowner,ColOng,"TARDIS Linked")

                elseif(DriveType == "gmod_wire_expression2" or DriveType == "starfall_processor" or DriveType == "starfall_emitter") then
                    DestInput = "Destination"
                    WarpInput = "Warp"
                    AngInput = "Angle Offset"

                    aiSay(sfowner,"Manual Drive Linked")
                else
                    aiSay(sfowner,"Unable to link to: ",ColRed,DriveType)
                end
            else
                aiSay(sfowner,"Drive Unlinked")
            end
        end
    end)

    function TargetWeps(Ent,Print,TPos)
        TarCloaked = 0
        wire.ports.TargetLocked = 1

        if(IsValid(Ent) and Ent:class() == "kino_ball") then
            aiSay(sfowner,"I'm sorry, ",ColTeam,sfowner:name(),ColOng," but I can't do that :)")

            return
        end

        if(Ent == ents.self()) then
            wire.ports.TargetPos = TPos

            if(Print == 1 and TPos ~= Vector(0,0,0)) then
                aiSay(sfowner,"Targetting Position: ",ColGrn,TPos)
            end

            for k,v in pairs(ShipWeapons) do
                local WepW = v:getWirelink()

                if(WepW:inputType("Target") ~= nil) then
                    WepW["Target"] = TPos
                end
            end
        else
            wire.ports.TargetEnt = Ent
            if(Ent:pos() ~= Vector(0,0,0)) then
                wire.ports.TargetPos = Ent:obbCenterW()
            end


            if(not IsValid(Ent) or not IsValid(Ent:owner())) then
                aiSay(sfowner,"That is not a valid target! (Are you looking at a shield?)")
                wire.ports.TargetLocked = 0
                return
            end

            local Tar = Ent

            if(Ent:owner():name() == "") then
                wire.ports.TargetOwner = ents.NULL_ENTITY
                TarColor = Color(255,255,255):ToVector() * 255
            else
                wire.ports.TargetOwner = Ent:owner()
                TarColor = Ent:owner():getTeamColor()
            end

            if(Print == 1) then
                if(Ent:isPlayer()) then
                    aiSay(sfowner,"Targetting ",Ent:owner():getTeamColor(),Ent:owner():name())
                else
                    aiSay(sfowner,"Targetting ",ColGrn,Ent:class(),ColOng," Owned by ",TarColor,Ent:owner():name())
                end
            end

            if(TPos ~= Vector(0,0,0)) then
                if(timer.exists("tarcheck")) then
                    timer.remove("tarcheck")
                end

                local TarPos = TPos
                for k,v in pairs(ShipWeapons) do
                    local WepW = v:getWirelink()

                    if(AimFixed == 1 and v:class() == "ship_cannon") then
                        v:setAng((TarPos - v:pos()):Angle())
                    end

                    if(AimFixed == 1 and v:class() == "keeper_emitter") then
                        v:setAng((TarPos - v:pos()):Angle())
                    end

                    if(WepW:inputType("Target") ~= nil) then
                        WepW["Target"] = Tar:obbCenterW()
                    end
                end
            else
                timer.create("tarcheck",0.1,0,function()
                    if(IsValid(Tar) and Tar:pos() ~= Vector(0,0,0)) then
                        if(TarCloaked == 1) then
                            TarCloaked = 0
                            aiSay(sfowner,"Target has uncloaked!")
                        end

                        local Offset = TarOffset(Tar)
                        wire.ports.TargetPos = Tar:obbCenterW()+Tar:up()*Offset

                        for k,v in pairs(ShipWeapons) do
                            if(not IsValid(v)) then
                                table.remove(ShipWeapons,v) --delete removed weapons from the ship weapons table
                            else
                                local WepW = v:getWirelink()
                                if(TargetLeading == 1 and IsValid(WepW)) then
                                    if(GetProjVel(v) ~= 0) then
                                        local TarPos = gvintercept(v:pos(), v:vel(), Tar:pos()+Tar:up()*Offset, Tar:vel(), GetProjVel(v))

                                        if(WepW:inputType("Target") ~= nil) then
                                            WepW["Target"] = TarPos
                                        end

                                        if(v:class() == "ship_cannon") then
                                            if(AimFixed == 1) then
                                                v:setAng((TarPos - v:pos()):Angle())
                                            end

                                            wire.ports.CannonLeadTarPos = TarPos
                                        end
                                    else
                                        local TarPos = Tar:pos() + Tar:up()*Offset

                                        if(WepW:inputType("Target") ~= nil) then
                                            WepW["Target"] = Tar:obbCenterW()
                                        end

                                        if(AimFixed == 1 and v:class() == "keeper_emitter") then
                                            v:setAng((TarPos - v:pos()):Angle())
                                        end
                                    end
                                else
                                    local TarPos = Tar:pos() + Tar:up()*Offset
                                    wire.ports.CannonLeadTarPos = TarPos

                                    if(IsValid(WepW) and WepW:inputType("Target") ~= nil) then
                                        WepW["Target"] = Tar:obbCenterW()
                                    else
                                        if(AimFixed == 1 and v:class() == "ship_cannon" or AimFixed == 1 and v:class() == "keeper_emitter") then
                                            v:setAng((TarPos - v:pos()):Angle())
                                        end
                                    end
                                end
                            end

                        end
                    else
                        if(AutoTarget == 1) then
                            if(WepTargets ~= nil and #WepTargets > 0) then
                                local Tar = table.remove(WepTargets,1)

                                if(IsValid(Tar)) then
                                    TargetWeps(Tar,AutoTargetPrint,Vector(0,0,0))
                                end
                            elseif(not IsValid(Tar)) then
                                aiSay(sfowner,"Target Lost! Likely destroyed.")

                                wire.ports.TargetLocked = 0

                                timer.remove("tarcheck")
                            elseif(IsValid(Tar) and TarCloaked == 0) then
                                TarCloaked = 1
                                aiSay(sfowner,"Target has cloaked!")
                            end
                        elseif(not IsValid(Tar)) then
                            aiSay(sfowner,"Target Lost! Likely destroyed.")
                            wire.ports.TargetLocked = 0

                            timer.remove("tarcheck")
                        end
                    end
                end)
            end
        end
    end
end

function AutoLink()
    TorpLaunchers = {}
    BeamEmitters = {}
    ShipTurrets = {}
    ShipWeapons = {}
    Tractors = {}
    Jammers = {}
    AlertLights = {}
    DoorValues = {}
    FieldValues = {}
    Stargates = {}
    RingPlats = {}
    Transporters = {}

    TorpFire = 0
    BeamFire = 0
    TurFire = 0
    TractorFire = 0
    JamActive = 0

    DoorList = ""
    FieldList = ""

    hook.add("input","InputChangedHook",function(iname,val)
        if(iname == "Stargate" and IsValid(val)) then
            local v = val:entity()

            if(v:class() == "stargate_atlantis" or
            v:class() == "stargate_infinity" or
            v:class() == "stargate_movie" or
            v:class() == "stargate_sg1" or
            v:class() == "stargate_tollan" or
            v:class() == "stargate_universe") then
                Stargate = v
                StargateW = v:getWirelink()
            end
        end

        if(iname == "Rings" and IsValid(val)) then
            local v = val:entity()

            if(v:class() == "ring_base_ancient" or
            v:class() == "ring_base_goauld" or
            v:class() == "ring_base_ori") then
                RingPlat = v
                RingPlatW = v:getWirelink()
            end
        end

        if(iname == "Transporter" and IsValid(val)) then
            local v = val:entity()

            if(v:class() == "asgard_transporter" or
            v:class() == "transporter_pad") then
                Transporter = v
                TransporterW = v:getWirelink()
            end
        end
    end)

    if(ents.self():getCore() == nil) then
        aiSay(sfowner,"There is no core on this ship! Cannot use autolink system!")

        return
    else
        ShipCore = ents.self():getCore()
        ShipCoreW = ents.self():getCore():getWirelink()
    end

    if(IsValid(ShipCore) and ShipCore:class() == "ship_core") then
        Shield = ShipCore:getShield()
        if(IsValid(Shield)) then
            ShieldW = ShipCore:getShield():getWirelink()
        end
    else
        aiSay(sfowner,"There is no Shield on this ship!")
    end

    for k,v in pairs(constraint.getAllConstrainedEntities(ents.self())) do
        if(v:class() == "stargazer_energy_core") then
            EnergyCore = v
            EnergyCoreW = v:getWirelink()
        else
            if(ALinkWarn == 1) then
                aiSay(sfowner,"There is no Energy Core on this ship!")
            end
        end

        if(v:class() == "stargazer_refinement_core") then
            Refinery = v
            RefineryW = v:getWirelink()
        else
            if(ALinkWarn == 1) then
                aiSay(sfowner,"There is no Refinery on this ship!")
            end
        end

        if(v:class() == "stargazer_water_core") then
            WaterCore = v
            WaterCoreW = v:getWirelink()
        else
            if(ALinkWarn == 1) then
                aiSay(sfowner,"There is no Water Core on this ship!")
            end
        end

        if(v:class() == "stargazer_ls_core") then
            LSCore = v
            LSCoreW = v:getWirelink()
        else
            if(ALinkWarn == 1) then
                aiSay(sfowner,"There is no Life Support Core on this ship!")
            end
        end

        if(v:class() == "st_cloaking_device") then
            CloakDevice = v
            CloakDeviceW = v:getWirelink()
        else
            if(ALinkWarn == 1) then
                aiSay(sfowner,"There is no Cloaking Device on this ship!")
            end
        end

        if(v:class() == "drive_core") then
            DriveCore = v
            DriveCoreW = v:getWirelink()
        end

        if(v:class() == "torpedo_launcher") then
            table.insert(TorpLaunchers,v)
            table.insert(ShipWeapons,v)
        end

        if(v:class() == "beam_emitter") then
            table.insert(BeamEmitters,v)
            table.insert(ShipWeapons,v)
        end

        if(v:class() == "ship_turret_base") then
            table.insert(ShipTurrets,v)
            table.insert(ShipWeapons,v)
        end

        if(v:class() == "cruise_missile_launcher" or
        v:class() == "sam_missile_launcher" or
        v:class() == "heavy_missile_pod" or
        v:class() == "ship_laser" or
        v:class() == "keeper_emitter" or
        v:class() == "pulsar_emitter" or
        v:class() == "pulse_phaser_emitter" or
        v:class() == "phaser_emitter" or
        v:class() == "ship_cannon" or
        v:class() == "sg_beam_emitter") then
            table.insert(ShipWeapons,v)
        end

        if(v:class() == "tractor_emitter") then
            table.insert(Tractors,v)
        end

        if(v:class() == "jamming_device") then
            table.insert(Jammers,v)
        end

        if(v:class() == "gmod_wire_light") then
            if(v:getWireName() == "VAlert") then
                table.insert(AlertLights,v)
            end
        end

        if(v:class() == "stargate_atlantis" or
        v:class() == "stargate_infinity" or
        v:class() == "stargate_movie" or
        v:class() == "stargate_sg1" or
        v:class() == "stargate_tollan" or
        v:class() == "stargate_universe") then
            table.insert(Stargates,v)
        end

        if(IsValid(Stargate) ~= true) then
            if(#Stargates > 1 and ALinkWarn == 1) then
                aiSay(sfowner,"There is more than 1 stargate, cannot autolink!")
            elseif(#Stargates == 1) then
                Stargate = table.unpack(Stargates,1,1)
                StargateW = table.unpack(Stargates,1,1):getWirelink()
            end
        end

        if(v:class() == "ring_base_ancient" or
        v:class() == "ring_base_goauld" or
        v:class() == "ring_base_ori") then
            table.insert(RingPlats,v)
        end

        if(#RingPlats > 1 and ALinkWarn == 1) then
            aiSay(sfowner,"There is more than 1 Ring Platform, cannot autolink!")
        elseif(#RingPlats == 1) then
            RingPlat = table.unpack(RingPlats,1,1)
            RingPlatW = table.unpack(RingPlats,1,1):getWirelink()
        end

        if(v:class() == "asgard_transporter" or
        v:class() == "transporter_pad") then
            table.insert(Transporters,v)
        end

        if(#Transporters > 1 and ALinkWarn == 1) then
            aiSay(sfowner,"There is more than 1 Transporter, cannot autolink!")
        elseif(#Transporters == 1) then
            Transporter = table.unpack(Transporters,1,1)
            TransporterW = table.unpack(Transporters,1,1):getWirelink()
        end

        --Door Linking
        if(v:class() == "gmod_wire_value") then
            vw = v:getWirelink()

            for k,ve in pairs(constraint.getConstrainedEntities(v)) do
                if(ve:class() == "sbep_base_door_controller" or ve:class() == "cap_doors_frame" or ve:class() == "sci_fi_door") then
                    if(vw["1"] == "VDoors") then
                        table.insert(DoorValues,v)

                        if(vw["3"] == 1) then
                            if(ve:class() == "cap_doors_frame") then
                                if(ve:getWirelink()["Opened"] == 0) then
                                    ve:getWirelink()["Toggle"] = 1

                                    timer.simple(0.1,function()
                                        ve:getWirelink()["Toggle"] = 0
                                    end)
                                end
                            elseif(ve:class() == "sci_fi_door") then
                                ve:getWirelink()["Open"] = 1
                            else
                                ve:getWirelink()["Open_1"] = 1
                            end
                        else
                            if(ve:class() == "cap_doors_frame") then
                                if(ve:getWirelink()["Opened"] == 1) then
                                    ve:getWirelink()["Toggle"] = 1

                                    timer.simple(0.1,function()
                                        ve:getWirelink()["Toggle"] = 0
                                    end)
                                end
                            elseif(ve:class() == "sci_fi_door") then
                                ve:getWirelink()["Open"] = 0
                            else
                                ve:getWirelink()["Open_1"] = 0
                            end
                        end
                    end
                end
            end

            for k,ve in pairs(constraint.getConstrainedEntities(v)) do
                if(ve:class() == "st_forcefield_emitter") then
                    if(vw["1"] == "VForcefields" or vw["1"] == "VForcefield") then
                        table.insert(FieldValues,v)

                        if(vw["3"] == 1) then
                            ve:getWirelink()["Activate"] = 1
                        else
                            ve:getWirelink()["Activate"] = 0
                        end
                    end
                end
            end
        end
    end
end

function dupefinished()
    AutoLink()

    timer.simple(1,function()

        config()

        SetAIName()

        functionSetup()

        nameCheck()

        AIVersCheck()

        DCWait = 1

        timer.simple(1,function()
            DCWait = 0

            hook.run("input", "Drive")
        end)
    end)
end

if starfall.isSpawnedFromDuplicator() then
    hook.add('postduplicationpaste', 'dupefinished', dupefinished)
else
    dupefinished()
end

wire.adjust(function(input, output)
    --Inputs
    input({"Stargate","Rings","Drive","Transporter"},"WIRELINK")
    input({"BrigEnt"},"ENTITY")

    --Outputs
    output({"Active","WarpFactor","Lockdown",},"NUMBER")
    output({"Alert"},"STRING")
    output({"SDTimeLeft","SDActive","DistressCall"},"NUMBER")
    output({"DistressLocation"},"STRING")
    --Weapon Control
    output({"Fire"},"NUMBER")
    --Warp Control
    output({"Warp"},"NUMBER")
    output({"Destination"},"VECTOR")
    output({"AngleOffset"},"ANGLE")
    output({"TargetPos"},"VECTOR")
    output({"TargetEnt","TargetOwner"},"ENTITY")
    output({"TargetLocked"},"NUMBER")
    output({"CannonLeadTarPos"},"VECTOR")
end)
end

if CLIENT then -- PlaySound Function because nets dont work on include
    permissions.register(permissions.PLAY_URL_SOUNDS)

    function playCLSound()
        snd = sounds.playURL(net.getDTVar("String",1),net.getDTVar("String",2),function(channel,a,callback)
            if(not channel) then
                if(callback == "BASS_ERROR_NO3D") then
                    printColor(Color(255,95,215,255),"[PlaySound] ",Color(230,110,0,255),"Audio Error 21. Try turning on 'Mono'")
                else
                    printColor(Color(255,95,215,255),"[PlaySound] ",Color(230,110,0,255),"Unknown Audio Error ",Color(255,0,0,255),callback)
                end
            else
                audio = channel

                audio:setVolume(net.getDTVar("Float",1))
                audio:setPos(net.getDTVar("Vector",1))
                audio:set3DFadeDistance(net.getDTVar("Int",1),net.getDTVar("Int",1)*1000)
            end
        end)
    end

    hook("net", "net", function()
        local Str = net.readString()
        if(Str == "vplysnd") then
            playCLSound()
        end
    end)
else -- Server
    function playSound(Pos,Flag,Dist,Volume,Pitch,URL)
        net.setDTVar("Vector",1,Pos) --pos
        net.setDTVar("String",2,Flag) --audio flag
        net.setDTVar("Int",1,Dist) --fadestart
        net.setDTVar("Float",1,Volume) --volume
        net.setDTVar("Int",3,Pitch) --pitch
        net.setDTVar("String",1,URL) --url

        timer.simple(0.1,function()
            net.start()
            net.writeString("vplysnd")
            net.broadcast()
        end)
    end
end

if SERVER then

function Power() --Energy Core / Power Toggle
    if(IsValid(EnergyCore) ~= true) then
        aiSay(sfowner,ColRed,"Energy Core not linked!")
    else
        if(EnergyCoreW["Active"] == 0) then
            EnergyCoreW["Activate"] = 1
            aiSay(sfowner,"Energy Generation ",ColGrn,"Online")

            if(CmdSound == 1) then
                playSound(sfowner:pos(),"mono",1000,4,100,"https://cdn.discordapp.com/attachments/1152826706223177728/1152826848795959476/Energy_Generation_Online.wav")
            end
        else
            EnergyCoreW["Activate"] = 0
            aiSay(sfowner,"Energy Generation ",ColRed,"Offline")

            if(CmdSound == 1) then
                playSound(sfowner:pos(),"mono",1000,4,100,"https://cdn.discordapp.com/attachments/1152826706223177728/1152826861919928320/Energy_Generation_Offline.wav")
            end
        end
    end
end

function Refine() -- Refinery Toggle
    if(IsValid(Refinery) ~= true) then
        aiSay(sfowner,ColRed,"Refinery not linked!")
    else
        if(RefineryW["Active"] == 0) then
            RefineryW["Activate"] = 1
            aiSay(sfowner,"Refinery ",ColGrn,"Online")
        else
            RefineryW["Activate"] = 0
            aiSay(sfowner,"Refinery ",ColRed,"Offline")
        end
    end
end

function LifeSupport() -- LifeSupport Toggle
    if(IsValid(LSCore) ~= true) then
        aiSay(sfowner,ColRed,"Life Support Core not linked!")
    else
        if(LSCoreW["Active"] == 0) then
            LSCoreW["Activate"] = 1
            aiSay(sfowner,"Life Support ",ColGrn,"Online")
        else
            LSCoreW["Activate"] = 0
            aiSay(sfowner,"Life Support ",ColRed,"Offline")
        end
    end
end

function Noclip(state)
    if(IsValid(LSCore) ~= true) then
        aiSay(sfowner,ColRed,"Lifesupport Core not linked!")
    else
        if(state == "on") then
            LSCoreW["Disable Noclip"] = 0
            aiSay(sfowner,"Anti-noclip ",ColGrn,"Disabled")
        end

        if(state == "off") then
            LSCoreW["Disable Noclip"] = 1
            aiSay(sfowner,"Anti-noclip ",ColGrn,"Enabled")
        end

        if(state == "fac") then
            LSCoreW["Disable Noclip"] = 2
            aiSay(sfowner,"Faction only noclip ",ColGrn,"Enabled")
        end

        if(state == "ally") then
            LSCoreW["Disable Noclip"] = 3
            aiSay(sfowner,"Alliance only noclip ",ColGrn,"Enabled")
        end
    end
end

function Mute()
    if(IsValid(EnergyCore) ~= true) then
        aiSay(sfowner,ColRed,"Energy Core not linked!")
    else
        EnergyCoreW["Mute"] = 1
    end

    if(IsValid(Refinery) ~= true) then
        aiSay(sfowner,ColRed,"Refinery not linked!")
    else
        RefineryW["Mute"] = 1
    end

    if(IsValid(LSCore) ~= true) then
        aiSay(sfowner,ColRed,"Life Support Core not linked!")
    else
        LSCoreW["Mute"] = 1
    end

    aiSay(sfowner,"Cores Muted")
end

function UnMute()
    if(IsValid(EnergyCore) ~= true) then
        aiSay(sfowner,ColRed,"Energy Core not linked!")
    else
        EnergyCoreW["Mute"] = 0
    end

    if(IsValid(Refinery) ~= true) then
        aiSay(sfowner,ColRed,"Refinery not linked!")
    else
        RefineryW["Mute"] = 0
    end

    if(IsValid(LSCore) ~= true) then
        aiSay(sfowner,ColRed,"Life Support Core not linked!")
    else
        LSCoreW["Mute"] = 0
    end

    aiSay(sfowner,"Cores Unmuted")
end

function WaterCollect()
    if(IsValid(WaterCore) ~= true) then
        aiSay(sfowner,ColRed,"Water Core not linked!")
    else
        if(IsValid(WaterCoreW["Collector"]) ~= true) then
            aiSay(sfowner,ColRed,"Water Collector not placed. Cannot collect water.")
        else
            WaterCW = WaterCoreW["Collector"]:getWirelink()

            if(WaterCW["Active"] == 0) then
                WaterCW["Activate"] = 1

                aiSay(sfowner,"Water Collector ",ColGrn,"Online")
            else
                WaterCW["Activate"] = 0

                aiSay(sfowner,"Water Collector ",ColRed,"Offline")
            end
        end
    end
end

function WaterCollectPlace()
    if(IsValid(WaterCore) ~= true) then
        aiSay(sfowner,ColRed,"Water Core not linked!")
    else
        WaterCoreW["Spawn Collector"] = 1

        _,WaterLoc = getClosestEnvironment(WaterCoreW:entity(),true)

        timer.simple(0.2,function()
            WaterCE = WaterCoreW["Collector"]
            WaterCE:getPhysicsObject():enableMotion(false)

            aiSay(sfowner,"Water Collector placed on: ",ColGrn,WaterLoc)

            if(WaterLoc == "Shakuras") then
                WaterCE:setPos(Vector(-6818,-7200,6730))
                WPlaced = 1
            end

            if(WaterLoc == "Earth") then
                WaterCE:setPos(Vector(-1260,7982,7942))
                WPlaced = 1
            end

            if(WaterLoc == "Hiigara") then
                WaterCE:setPos(Vector(5654,6201,-6194))
                WPlaced = 1
            end

            if(WaterLoc == "Desert") then
                WaterCE:setPos(Vector(11350,-9220,-9360))
                WPlaced = 1
            end

            if(WPlaced == 0) then
                aiSay(sfowner,"Cannot place a Water Collector here")
            end
        end)
    end
end

function Plating()
    if(IsValid(ShipCore) ~= true) then
        aiSay(sfowner,ColRed,"Ship Core not linked!")
    else
        if(ShipCoreW["Plating Enabled"] == 0) then
            ShipCoreW["Enable Plating"] = 1
            aiSay(sfowner,"Plating Generation ",ColGrn,"Enabled")
        end

        if(ShipCoreW["Plating Enabled"] == 1) then
            ShipCoreW["Enable Plating"] = 0
            aiSay(sfowner,"Plating Generation ",ColRed,"Disabled")
        end
    end
end

function Repair()
    if(IsValid(ShipCore) ~= true) then
        aiSay(sfowner,ColRed,"Ship Core not linked!")
    else
        RepairFire = notVar(RepairFire)
        ShipCoreW["Fire Repair Beam"] = RepairFire

        if(RepairFire == 1) then
            aiSay(sfowner,"Repair Beam ",ColGrn,"Online")
        else
            aiSay(sfowner,"Repair Beam ",ColRed,"Offline")
        end
    end
end

function TractorBeam()
    TractorFire = notVar(TractorFire)

    for k,v in pairs(Tractors) do
        v:getWirelink()["Fire"] = TractorFire
    end

    if(TractorFire == 1) then
        aiSay(sfowner,"Tractor Beam ",ColGrn,"Online")
    else
        aiSay(sfowner,"Tractor Beam ",ColRed,"Offline")
    end
end

function ShieldFunc()
    if(IsValid(Shield) ~= true) then
        aiSay(sfowner,ColRed,"Shield Emitter not linked!")
    else
        if(ShieldW["Active"] == 0) then
            ShieldW["Activate"] = 1
            aiSay(sfowner,"Shield ",ColGrn,"Activated")
        else
            ShieldW["Activate"] = 0
            aiSay(sfowner,"Shield ",ColRed,"Deactivated")
        end
    end
end

function Cloak()
    if(IsValid(CloakDevice) ~= true) then
        aiSay(sfowner,ColRed,"Cloaking Device not linked!")
    else
        if(CloakDeviceW["Active"] == 0) then
            CloakDeviceW["Activate"] = 1
            aiSay(sfowner,"Cloak ",ColGrn,"Activated")
        else
            CloakDeviceW["Activate"] = 0
            aiSay(sfowner,"Cloak ",ColRed,"Deactivated")
        end
    end
end

function StartShip()
    if(IsValid(EnergyCore) ~= true) then
        aiSay(sfowner,ColRed,"Energy Core not linked!")
    else
        EnergyCoreW["Activate"] = 1
    end

    if(IsValid(ShipCore) ~= true) then
        aiSay(sfowner,ColRed,"Refinery not linked!")
    else
        ShipCoreW["Enable Plating"] = 1
    end

    if(IsValid(LSCore) ~= true) then
        aiSay(sfowner,ColRed,"Life Support Core not linked!")
    else
        LSCoreW["Activate"] = 1
    end

    aiSay(sfowner,"Activating ship systems. Turning on the Power, Life Support, and Plating Generation")

    -- should do addstring stuff for not linked and print a single line
    -- same with activating systems, add string or remove string if core isn't linked
end

function SelfDestruct(input)
    if(input == "this" or input == "that") then
        local AimE = sfowner:aimEntity()
        local AimEW = AimE:getWirelink()

        if(IsValid(AimE) == true) then
            if(AimE:class() == "ship_core" or AimE:class() == "st_shuttle_type9" or AimE:class() == "st_shuttle_type11" or AimE:class() == "st_shuttle_type6" or AimE:class() == "atlantis_puddle_jumper" or AimE:class() == "sci_fi_shuttle") then
                AimEW["Self Destruct"] = 1

                aiSay(sfowner,"Self Destructing that ",ColGrn,AimE:getPrintName(),ColOng," Owned by: ",AimE:owner():getTeamColor(),AimE:owner():name())
            else
                aiSay(sfowner,"That ",ColRed,AimE:getPrintName(),ColOng," cannot be self destructed.")
            end
        else
            aiSay(sfowner,"You're not aiming at anything.")
        end
    end

    if(IsValid(ShipCore) ~= true) then
        aiSay(sfowner,ColRed,"Ship core not linked!")
    else
        if(input == "stop") then
            if(timer.exists("sd")) then
                timer.stop("sd")

                wire.ports.SDTimeLeft = 0
                wire.ports.SDActive = 0
                ShipCoreW:entity():stopEnvironmentSound()

                wire.ports.Alert = "Green"
                for k,v in pairs(AlertLights) do
                    v:getWirelink()["RGB"] = Green
                end

                timer.stop("AlertLightTimer")

                aiSay(sfowner,"Self Destruct ",ColGrn,"Stopped")
            else
                aiSay(sfowner,ColRed,"Self Destruct isn't Active")
            end
        end

        if(input == "pause") then
            if(timer.exists("sd")) then
                timer.pause("sd")

                ShipCoreW:entity():stopEnvironmentSound()

                wire.ports.Alert = "Self Destruct Pause"
                for k,v in pairs(AlertLights) do
                    v:getWirelink()["RGB"] = AlertRed
                end

                timer.stop("AlertLightTimer")

                aiSay(sfowner,"Self Destruct ",ColGrn,"Paused")
            else
                aiSay(sfowner,ColRed,"Self Destruct isn't Active")
            end
        end

        if(input == "unpause") then
            if(timer.exists("sd")) then
                timer.unpause("sd")

                ShipCoreW:entity():setEnvironmentSound("alarm/sga_midway_selfdestruct.wav")

                timer.start("AlertLightTimer")

                aiSay(sfowner,"Self Destruct ",ColGrn,"Unpaused")
            else
                aiSay(sfowner,ColRed,"Self Destruct isn't Active")
            end
        end

        if(input ~= "this" and input ~= "that" and input ~= "stop" and input ~= "pause" and input ~= "unpause") then
            if(input == nil) then
                ShipCoreW["Self Destruct"] = 1

                aiSay(sfowner,"No time specified. Activating Self Destruct")
            else
                wire.ports.SDTimeLeft = tonumber(input)
                wire.ports.SDActive = 1

                if(tonumber(input) == 69) then
                    aiSay(sfowner,"Self Destruct activated for: ",ColGrn,tonumber(input),ColOng," seconds. Nice.")
                else
                    aiSay(sfowner,"Self Destruct activated for: ",ColGrn,tonumber(input),ColOng," seconds.")
                end

                wire.ports.Alert = "Self Destruct"
                for k,v in pairs(AlertLights) do
                    v:getWirelink()["RGB"] = AlertRed
                end

                timer.start("AlertLightTimer")

                ShipCoreW:entity():setEnvironmentSound("alarm/sga_midway_selfdestruct.wav")

                timer.create("sd",1,0,function()
                    wire.ports.SDTimeLeft = wire.self().SDTimeLeft - 1

                    if(wire.self().SDTimeLeft <= 0) then
                        ShipCoreW["Self Destruct"] = 1
                        timer.stop("sd")
                    end

                    if(wire.self().SDTimeLeft == 0) then
                        aiSay(sfowner,"Ship Destruct")
                    end

                    if(wire.self().SDTimeLeft == 5) then
                        aiSay(sfowner,"Self Destruct in",ColGrn," 5 ",ColOng,"seconds.")
                    end

                    if(wire.self().SDTimeLeft == 10) then
                        aiSay(sfowner,"Self Destruct in",ColGrn," 10 ",ColOng,"seconds.")
                    end

                    if(wire.self().SDTimeLeft == 30) then
                        aiSay(sfowner,"Self Destruct in",ColGrn," 30 ",ColOng,"seconds.")
                    end

                    if(wire.self().SDTimeLeft == 60) then
                        aiSay(sfowner,"Self Destruct in",ColGrn," 60 ",ColOng,"seconds.")
                    end
                end)
            end
        end
    end
end

function Alert(input)
    if(IsValid(ShipCore) ~= true) then
        aiSay(sfowner,ColRed,"Ship Core not linked!")
    else
        if(input == "green") then
            ShipCoreW:entity():setEnvironmentSound("st/shuttlecraft/computer_work2.mp3",0.4)
            ShipCoreW:entity():stopEnvironmentSound()

            wire.ports.Alert = "Green"

            for k,v in pairs(AlertLights) do
                v:getWirelink()["RGB"] = AlertGreen
            end

            timer.stop("AlertLightTimer")

            aiSay(sfowner,"Condition",ColGrn," Green ",ColOng,"Stand down.")

            if(GateCol == 1) then
                if(IsValid(wire.ports.Stargate)) then
                    wire.ports.Stargate["Event Horion Color"] = Vector(255,255,255)
                elseif(IsValid(Stargate)) then
                    StargateW["Event Horizon Color"] = Vector(255,255,255)
                end
            end
        end


        if(input == "blue") then
            ShipCoreW:entity():setEnvironmentSound("st/misc/bluealert.wav",0.4)

            wire.ports.Alert = "Blue"
            for k,v in pairs(AlertLights) do
                v:getWirelink()["RGB"] = AlertBlue
            end

            timer.start("AlertLightTimer")

            aiSay(sfowner,"Condition",ColBlu," Blue ",ColOng,"Prepare for Battle.")

            if(GateCol == 1) then
                if(IsValid(wire.ports.Stargate)) then
                    wire.ports.Stargate["Event Horion Color"] = AlertBlue
                elseif(IsValid(Stargate)) then
                    StargateW["Event Horizon Color"] = AlertBlue
                end
            end
        end

        if(input == "red") then
            ShipCoreW:entity():setEnvironmentSound("st/misc/voy_redalert_loop.wav",0.4)

            wire.ports.Alert = "Red"
            for k,v in pairs(AlertLights) do
                v:getWirelink()["RGB"] = AlertRed
            end

            timer.start("AlertLightTimer")

            aiSay(sfowner,"Condition",ColRed," Red ",ColOng,"Battle Stations!")

            if(GateCol == 1) then
                if(IsValid(wire.ports.Stargate)) then
                    wire.ports.Stargate["Event Horion Color"] = AlertRed
                elseif(IsValid(Stargate)) then
                    StargateW["Event Horizon Color"] = AlertRed
                end
            end
        end

        if(input == "black") then
            ShipCoreW:entity():setEnvironmentSound("st/misc/dsc_black_alert_short.wav",0.4)

            wire.ports.Alert = "Black"
            for k,v in pairs(AlertLights) do
                v:getWirelink()["RGB"] = AlertBlack
            end

            timer.start("AlertLightTimer")

            aiSay(sfowner,"Condition",ColWht," Black ",ColOng,"Shipwide Experiment")

            if(GateCol == 1) then
                if(IsValid(wire.ports.Stargate)) then
                    wire.ports.Stargate["Event Horion Color"] = AlertBlack
                elseif(IsValid(Stargate)) then
                    StargateW["Event Horizon Color"] = AlertBlack
                end
            end
        end

        if(input == "abandon") then
            ShipCoreW:entity():setEnvironmentSound("st/misc/abandon_ship.wav",0.4)

            wire.ports.Alert = "Abandon Ship"
            for k,v in pairs(AlertLights) do
                v:getWirelink()["RGB"] = AlertRed
            end

            timer.start("AlertLightTimer")

            aiSay(sfowner,ColRed,"Abandon Ship!")

            if(GateCol == 1) then
                if(IsValid(wire.ports.Stargate)) then
                    wire.ports.Stargate["Event Horion Color"] = Vector(200,0,0)
                elseif(IsValid(Stargate)) then
                    StargateW["Event Horizon Color"] = Vector(200,0,0)
                end
            end
        end
    end
end

function LockDown(input)
    if(input == true) then
        ShipCoreW:entity():setEnvironmentSound("st/misc/rom_redalert.wav",0.4)

        wire.ports.Lockdown = 1

        if(IsValid(Shield) ~= true) then
            aiSay(sfowner,ColRed,"Shield Emitter not linked!")
        else
            ShieldW["Activate"] = 1
        end

        if(IsValid(wire.ports.Rings)) then
            wire.ports.Rings["UnUsable"] = 1
        end

        if(IsValid(LSCoreW) ~= true) then
            aiSay(sfowner,ColRed,"Life Support Core not Linked!")
        else
            LSCoreW["Disable Noclip"] = 1
        end

        aiSay(sfowner,"Lockdown",ColGrn," Activated")
    else
        ShipCoreW:entity():setEnvironmentSound("st/shuttlecraft/computer_work2.mp3",0.4)
        ShipCoreW:entity():stopEnvironmentSound()

        wire.ports.Lockdown = 0

        if(IsValid(wire.ports.Rings)) then
            wire.ports.Rings["UnUsable"] = 0
        end

        if(IsValid(LSCore) ~= true) then
            aiSay(sfowner,ColRed,"Life Support Core not Linked!")
        else
            LSCoreW["Disable Noclip"] = 0
        end

        aiSay(sfowner,"Lockdown ",ColGrn,"Disabled")
    end
end

function Diagnostic(diagcheck) --try string.add or whatever the func is to make it print a single time !
    MissingEng = 1
    MissingRef = 1
    MissingWat = 1
    MissingLS = 1
    MissingCloak = 1
    MissingDriveC = 1

    local aiment = sfowner:aimEntity()

    if(not IsValid(aiment)) then
        aiSay(sfowner,"You're not even looking at anything!")
        --play curb your enthusiasm here because funny
    else
        if(aiment:getCore() == nil) then
            aiSay(sfowner,"There is no",ColRed," Ship Core ",ColOng,"on that ship!")
            --play curb your enthusiam here because more funny

            return
        end

        if(IsValid(aiment:getCore():getShield())) then
            aiSay(sfowner,"There is no",ColRed," Shield ",ColOng,"on that ship!")
        end

        for k,v in pairs(constraint.getAllConstrainedEntities(aiment)) do
            if(v:class() == "stargazer_energy_core") then
                MissingEng = 0
            end

            if(v:class() == "stargazer_refinement_core") then
                MissingRef = 0
            end

            if(v:class() == "stargazer_water_core") then
                MissingWat = 0
            end

            if(v:class() == "stargazer_ls_core") then
                MissingLS = 1
            end

            if(v:class() == "st_cloaking_device") then
                MissingCloak = 0
            end

            if(v:class() == "drive_core") then
                MissingDriveC = 0
            end
        end

        if(MissingEng == 1) then
            aiSay(sfowner,"There is no",ColRed," Energy Core ",ColOng,"on this ship!")
        end

        if(MissingRef == 1) then
            aiSay(sfowner,"There is no",ColRed," Refinery ",ColOng,"on this ship!")
        end

        if(MissingWat == 1) then
            aiSay(sfowner,"There is no",ColRed," Water Core ",ColOng,"on this ship!")
        end

        if(MissingLS == 1) then
            aiSay(sfowner,"There is no",ColRed," Life Support ",ColOng,"Core on this ship!")
        end

        if(MissingCloak == 1) then
            aiSay(sfowner,"There is no",ColRed," Cloaking Device ",ColOng,"on this ship!")
        end

        if(MissingDriveC == 1) then
            aiSay(sfowner,"There is no",ColRed," Drive Core ",ColOng,"on this ship!")
        end
    end
end

--I will do the rest at some other point

chat.listen(function(message, player)
    local OLS = message:lower():explode(" ",true)

    local function CMD(input)
        if(iSIT(input,CLS)) then
            return true
        else
            return false
        end
    end


    if(OLS[1] == Prefix and OLS[2] ~= nil) then
        CLS = OLS[2]:explode(";",true)
        ---------------
        ---Stargazer---
        ---------------

        --Power
        if(CMD("power")) then
            Power()
        end

        --Refinery
        if(CMD("refine")) then
            Refine()
        end

        --Life Support
        if(CMD("ls")) then
            LifeSupport()
        end

        --Noclip
        if(CMD("noclip")) then
            Noclip(OLS[3])
        end

        --Mute
        if(CMD("mute")) then
            Mute()
        end

        --Unmute
        if(CMD("unmute")) then
            UnMute()
        end

        --Water
        if(CMD("water")) then
            WaterCollect()
        end

        if(CMD("wplace")) then
            WaterCollectPlace()
        end

        ------------------
        ---Core Systems---
        ------------------
        if(CMD("plating")) then
            Plating()
        end

        if(CMD("repair")) then
            Repair()
        end

        if(CMD("tractor") or CMD("tr")) then
            TractorBeam()
        end

        if(CMD("shield")) then
            ShieldFunc()
        end

        if(CMD("cloak")) then
            Cloak()
        end

        if(CMD("startup")) then
            StartShip()
        end

        if(CMD("sd")) then
            SelfDestruct(OLS[3])
        end

        ------------
        ---Alarms---
        ------------
        if(CMD("alert")) then
            Alert(OLS[3])
        end

        if(CMD("ldon")) then
           LockDown(true)
        end

        if(CMD("ldoff")) then
            LockDown(false)
        end

        if(CMD("helper") or CMD("diagnose") or CMD("diag")) then
            Diagnostic(OLS[3])
        end

        -----------------------
        ---Doors/Forcefields---
        -----------------------
        if(CMD("door") or CMD("doors")) then
            if(OLS[3] == "list") then
                for I = 1,#DoorValues do
                    if I == #DoorValues then
                        DoorList = ""..DoorList.." "..DoorValues[I]:getWirelink()["2"].."."
                    else
                        DoorList = ""..DoorList.." "..DoorValues[I]:getWirelink()["2"]..","
                    end
                end

                aiSay(sfowner,"Door List: "..DoorList)
            else
                if(OLS[3] ~= nil) then
                    for I = 1,#DoorValues do
                        if(OLS[3] == "all") then -- All Doors
                            for k,v in pairs(constraint.getConstrainedEntities(DoorValues[I])) do
                                if(OLS[4] == nil) then
                                    if(v:class() == "cap_doors_frame") then
                                        v:getWirelink()["Toggle"] = 1

                                        timer.simple(0.1,function()
                                            v:getWirelink()["Toggle"] = 0
                                        end)
                                    elseif(v:class() == "sci_fi_door") then
                                        if(v:getWirelink()["Opened"] == 1) then
                                            v:getWirelink()["Open"] = 0
                                        elseif(v:getWirelink()["Opened"] == 0) then
                                            v:getWirelink()["Open"] = 1
                                        end
                                    elseif(v:class() == "sbep_base_door_controller") then
                                        if(v:getWirelink()["Opened_1"] == 1) then
                                            v:getWirelink()["Open_1"] = 0
                                        elseif(v:getWirelink()["Opened_1"] == 0) then
                                            v:getWirelink()["Open_1"] = 1
                                        end
                                    end

                                    if(I == #DoorValues) then
                                        aiSay(sfowner,"All Doors",ColGrn," Toggled.")
                                    end
                                else
                                    if(OLS[4] == "open") then
                                        if(v:class() == "cap_doors_frame") then
                                            if(v:getWirelink()["Opened"] == 0) then
                                                v:getWirelink()["Toggle"] = 1

                                                timer.simple(0.1,function()
                                                    v:getWirelink()["Toggle"] = 0
                                                end)
                                            end
                                        elseif(v:class() == "sci_fi_door") then
                                            v:getWirelink()["Open"] = 1
                                        elseif(v:class() == "sbep_base_door_controller") then
                                            v:getWirelink()["Open_1"] = 1
                                        end

                                        if(I == #DoorValues) then
                                            aiSay(sfowner,"All Doors",ColGrn," Opened.")
                                        end
                                    elseif(OLS[4] == "close") then
                                        if(v:class() == "cap_doors_frame") then
                                            if(v:getWirelink()["Opened"] == 1) then
                                                v:getWirelink()["Toggle"] = 1

                                                timer.simple(0.1,function()
                                                    v:getWirelink()["Toggle"] = 0
                                                end)
                                            end
                                        elseif(v:class() == "sci_fi_door") then
                                            v:getWirelink()["Open"] = 0
                                        elseif(v:class() == "sbep_base_door_controller") then
                                            v:getWirelink()["Open_1"] = 0
                                        end

                                        if(I == #DoorValues) then
                                            aiSay(sfowner,"All Doors",ColGrn," Closed.")
                                        end
                                    end
                                end
                            end
                        else
                            if(tostring(DoorValues[I]:getWirelink()["2"]):lower() == OLS[3]) then
                                DoorPrint = 0

                                for k,v in pairs(constraint.getConstrainedEntities(DoorValues[I])) do
                                    if(#v > 1) then
                                        DoorString = " Doors"

                                        if(I == #DoorValues and OLS[4] == nil) then
                                            if(OLS[4] == "open") then
                                                aiSay(sfowner,OLS[3],DoorString,ColGrn," Opened.")
                                            elseif(OLS[4] == "close") then
                                                aiSay(sfowner,OLS[3],DoorString,ColGrn," Closed.")
                                            else
                                                aiSay(sfowner,OLS[3],DoorString,ColGrn," Toggled.")
                                            end
                                        end
                                    else
                                        DoorString = " Door"

                                        if(DoorPrint == 0) then --jank ass shit so it doesnt print twice
                                            DoorPrint = 1

                                            if(OLS[4] == "open") then
                                                aiSay(sfowner,OLS[3],DoorString,ColGrn," Opened.")
                                            elseif(OLS[4] == "close") then
                                                aiSay(sfowner,OLS[3],DoorString,ColGrn," Closed.")
                                            else
                                                aiSay(sfowner,OLS[3],DoorString,ColGrn," Toggled.")
                                            end

                                            timer.simple(0.1,function()
                                                DoorPrint = 0
                                            end)
                                        end
                                    end

                                    if(OLS[4] == nil) then
                                        if(v:class() == "cap_doors_frame") then
                                            v:getWirelink()["Toggle"] = 1

                                            timer.simple(0.1,function()
                                                v:getWirelink()["Toggle"] = 0
                                            end)
                                        elseif(v:class() == "sci_fi_door") then
                                            if(v:getWirelink()["Opened"] == 1) then
                                                v:getWirelink()["Open"] = 0
                                            elseif(v:getWirelink()["Opened"] == 0) then
                                                v:getWirelink()["Open"] = 1
                                            end
                                        elseif(v:class() == "sbep_base_door_controller") then
                                            if(v:getWirelink()["Opened_1"] == 1) then
                                                v:getWirelink()["Open_1"] = 0
                                            elseif(v:getWirelink()["Opened_1"] == 0) then
                                                v:getWirelink()["Open_1"] = 1
                                            end
                                        end

                                    else
                                        if(OLS[4] == "open") then
                                            if(v:class() == "cap_doors_frame") then
                                                if(v:getWirelink()["Opened"] == 0) then
                                                    v:getWirelink()["Toggle"] = 1

                                                    timer.simple(0.1,function()
                                                        v:getWirelink()["Toggle"] = 0
                                                    end)
                                                end
                                            elseif(v:class() == "sci_fi_door") then
                                                v:getWirelink()["Open"] = 1
                                            elseif(v:class() == "sbep_base_door_controller") then
                                                v:getWirelink()["Open_1"] = 1
                                            end
                                        elseif(OLS[4] == "close") then
                                            if(v:class() == "cap_doors_frame") then
                                                if(v:getWirelink()["Opened"] == 1) then
                                                    v:getWirelink()["Toggle"] = 1

                                                    timer.simple(0.1,function()
                                                        v:getWirelink()["Toggle"] = 0
                                                    end)
                                                end
                                            elseif(v:class() == "sci_fi_door") then
                                                v:getWirelink()["Open"] = 0
                                            elseif(v:class() == "sbep_base_door_controller") then
                                                v:getWirelink()["Open_1"] = 0
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end

        if(CMD("field") or CMD("forcefield") or CMD("ff")) then
            if(OLS[3] == "list") then
                for I = 1,#FieldValues do
                    if I == #FieldValues then
                        FieldList = ""..FieldList.." "..FieldValues[I]:getWirelink()["2"].."."
                    else
                        FieldList = ""..FieldList.." "..FieldValues[I]:getWirelink()["2"]..","
                    end
                end

                aiSay(sfowner,"Forcefield List: "..FieldList)
            else
                if(OLS[3] ~= nil) then
                    for I = 1,#FieldValues do
                        if(OLS[3] == "all") then
                            for k,v in pairs(constraint.getConstrainedEntities(FieldValues[I])) do
                                if(#v > 1) then
                                    FieldString = "VForcefields"
                                else
                                    FieldString = "VForcefield"
                                end

                                if(OLS[4] == nil) then
                                    if(v:getWirelink()["Active"] == 1) then
                                        v:getWirelink()["Activate"] = 0
                                    else
                                        v:getWirelink()["Activate"] = 1
                                    end
                                    if(I == #FieldValues) then
                                        aiSay(sfowner,"All Forcefields",ColGrn," Toggled.")
                                    end
                                else
                                    if(OLS[4] == "open") then
                                        v:getWirelink()["Activate"] = 1

                                        if(I == #FieldValues) then
                                            aiSay(sfowner,"All Forcefields",ColGrn," Activated.")
                                        end
                                    elseif(OLS[4] == "close") then
                                        v:getWirelink()["Activate"] = 0
                                        if(I == #FieldValues) then
                                            aiSay(sfowner,"All Forcefields",ColGrn," Deactivated.")
                                        end
                                    end
                                end
                            end
                        else
                            if(tostring(FieldValues[I]:getWirelink()["2"]):lower() == OLS[3]) then
                                FieldPrint = 0

                                for k,v in pairs(constraint.getConstrainedEntities(FieldValues[I])) do
                                    if(#v > 1) then
                                        FieldString = " Forcefields"
                                    else
                                        FieldString = " Forcefield"

                                        if(FieldPrint == 0) then --jank ass shit so it doesnt print twice
                                            FieldPrint = 1

                                            if(OLS[4] == "open" or OLS[4] == "off") then
                                                aiSay(sfowner,OLS[3],FieldString,ColGrn," Deactivated.")
                                            elseif(OLS[4] == "close" or OLS[4] == "on") then
                                                aiSay(sfowner,OLS[3],FieldString,ColGrn," Activated.")
                                            else
                                                aiSay(sfowner,OLS[3],FieldString,ColGrn," Toggled.")
                                            end

                                            timer.simple(0.1,function()
                                                DoorPrint = 0
                                            end)
                                        end
                                    end

                                    if(OLS[4] == nil) then
                                        if(v:getWirelink()["Active"] == 1) then
                                            v:getWirelink()["Activate"] = 0
                                        else
                                            v:getWirelink()["Activate"] = 1
                                        end
                                    else
                                        if(OLS[4] == "open" or OLS[4] == "off") then
                                            v:getWirelink()["Activate"] = 1
                                        elseif(OLS[4] == "close" or OLS[4] == "on") then
                                            v:getWirelink()["Activate"] = 0
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end

        ----------
        ---Misc---
        ----------
        if(CMD("sugged")) then
             chat.sayAlliance(ColPink,"[",AIName,"] ",ColOng,"sugged xd")
             playSound(sfowner:pos(),"mono",1000,4,100,"https://cdn.discordapp.com/attachments/915811722646925312/1153013386121068695/sugged.wav")
        end

        if(CMD("asay")) then
            chat.sayAlliance(ColPink,"[",AIName,"]",ColOng,message:sub(6+#Prefix))
        end

        if(CMD("fsay")) then
            chat.say(ColPink,"[",AIName,"]",ColOng,message:sub(6+#Prefix))
        end

        if(CMD("oneill") or CMD("o'neill")) then
            --aiSay(sfowner,"The O'Neill function has not been created yet.")
            ONeill()
        end

        if(CMD("help")) then
            aiSay(sfowner,AIName," Help can be found at:")
            printColor(ColOng,"https://docs.google.com/document/d/1O2u7H4LFrC73PP-RpSY7yRGR4XEydbntwioRyLWV7Gk")
        end

        if(CMD("activate") or CMD("deactivate") or CMD("enable") or CMD("disable") or CMD("work") or CMD("workn't")) then
            local AimE = sfowner:aimEntity()

            if(IsValid(AimE)) then
                if(AimE:class() == "st_forcefield") then
                    if(AimE:owner() ~= sfowner) then
                        aiSay(sfowner,"You do not own that forcefield!")
                        -- Because getParent() on a forcefield you dont own returns nil, even with toolgun access >:(
                    else
                        AimEW = AimE:getParent():getWirelink()
                        AimName = "Forcefield"
                    end
                else
                    if(propprotection.isAllowedForEntity(AimE,propprotection.ACCESS_TOOLGUN) == true) then
                        AimEW = AimE:getWirelink()

                        if(AimE:getPrintName() ~= nil) then
                            AimName = AimE:getPrintName()
                        else
                            AimName = tostring(AimE:class())
                        end

                        if(AimEW ~= nil and AimEW:inputType("Activate") ~= false) then
                            if(OLS[2] == "activate" or OLS[2] == "work") then
                                if(AimEW["Activate"] == 1) then
                                    aiSay(sfowner,"That ",ColGrn,AimName,ColOng," is already activated!")
                                else
                                    AimEW["Activate"] = 1

                                    aiSay(sfowner,ColGrn,"Activating",ColOng," that ",ColGrn,AimName)
                                end
                            end

                            if(OLS[2] == "deactivate" or OLS[2] == "workn't") then
                                if(AimEW["Activate"] == 0) then
                                    aiSay(sfowner,"That ",ColGrn,AimName,ColOng," is already deactivated!")
                                else
                                    AimEW["Activate"] = 0

                                    aiSay(sfowner,ColGrn,"Deactivating",ColOng," that ",ColGrn,AimName)
                                end
                            end

                            if(OLS[2] == "enable") then
                                if(AimEW["Activate"] == 1) then
                                    aiSay(sfowner,"That ",ColGrn,AimName,ColOng," is already activated!")
                                else
                                    AimEW["Activate"] = 1

                                    aiSay(sfowner,ColRed,"Deactivating",ColOng," that ",ColGrn,AimName,ColOng," for 5 seconds.")
                                    disableEnt(0)
                                end
                            end

                            if(OLS[2] == "disable") then
                                if(AimEW["Activate"] == 0) then
                                    aiSay(sfowner,"That ",ColGrn,AimName,ColOng," is already deactivated!")
                                else
                                    AimEW["Activate"] = 0

                                    aiSay(sfowner,ColRed,"Deactivating",ColOng," that ",ColGrn,AimName,ColOng," for 5 seconds.")
                                    disableEnt(1)
                                end
                            end
                        else
                            aiSay(sfowner,"That ",ColRed,AimName,ColOng," does not have a ",ColGrn,"Activate",ColOng," input.")
                        end
                    else
                        aiSay(sfowner,"You do not have Toolgun Permissions for that ",ColRed,AimE:class())
                    end
                end
            else
                aiSay(sfowner,"You're not aiming at anything, or you don't have toolgun permission for that.")
            end
        end
        if(CMD("open") or CMD("close") or CMD("lock") or CMD("unlock")) then
            local AimE = sfowner:aimEntity()

            if(IsValid(AimE)) then
                if(propprotection.isAllowedForEntity(AimE,propprotection.ACCESS_TOOLGUN) == true) then
                    AimEW = AimE:getWirelink()

                    if(AimE:class() == "sbep_base_door_controller" or AimE:class() == "sbep_base_door") then
                        DoorFound = 1
                        AimName = "SBEP Door"

                        if(AimE:class() == "sbep_base_door_controller") then
                            DoorFrame = AimEW
                        else
                            DoorFrame = AimE:getParent():getWirelink()
                        end

                        if(OLS[3] == nil) then
                            OpenInput = "Open_1"
                            LockInput = "Lock_1"
                        else
                            OpenInput = "Open_"..tonumber(OLS[3])
                            LockInput = "Lock_"..tonumber(OLS[3])
                        end
                    end

                    if(AimE:class() == "cap_doors_frame" or AimE:class() == "cap_doors") then
                        DoorFound = 1
                        TOpenInput = "Toggle"
                        LockInput = "Lockdown"
                        AimName = "CAP Door"

                        if(AimE:class() == "cap_doors_frame") then
                            DoorFrame = AimEW
                        else
                            DoorFrame = AimE:getParent():getWirelink()
                        end

                        timer.create("ToggleDoorReset",0.1,1,function()
                            TOpenInput = 0
                        end)
                    end

                    if(AimE:class() == "sci_fi_door" or AimE:class() == "sci_fi_door_anim") then
                        DoorFound = 1
                        TOpenInput = "Open"
                        LockInput = "Lock"
                        AimName = "Sci-fi Door"

                        if(AimE:class() == "sci_fi_door") then
                            DoorFrame = AimEW
                        else
                            DoorFrame = AimE:getParent():getWirelink()
                        end
                    end

                    if(DoorFound == 0) then
                        aiSay(sfowner,"That ",ColRed,AimE:getPrintName(),ColOng," is not a Door or is not supported.")
                    end
                else
                    aiSay(sfowner,"You do not have Toolgun Permissions for that ",ColRed,AimE:class())
                end
            else
                aiSay(sfowner,"You're not looking at anything")
            end

            if(OLS[2] == "open") then
                if(DoorFound == 1) then
                    if(OLS[3] ~= nil) then
                        if(AimE:class() == "sbep_base_door" or AimE:class() == "sbep_base_door_controller") then
                            aiSay(sfowner,"Opening door ",ColGrn,OLS[3],ColOng," on that SBEP door")
                        end
                    else
                        aiSay(sfowner,"Opening that ",ColGrn,AimName)
                    end

                    DoorFound = 0
                    DoorFrame[OpenInput] = 1
                    DoorFrame[TOpenInput] = 1
                end
            end

            if(OLS[2] == "close") then
                if(DoorFound == 1) then
                    if(OLS[3] ~= nil) then
                        if(AimE:class() == "sbep_base_door" or AimE:class() == "sbep_base_door_controller") then
                            aiSay(sfowner,"Closing door ",ColGrn,OLS[3],ColOng," on that SBEP door")
                        end
                    else
                        aiSay(sfowner,"Closing that ",ColGrn,AimName)
                    end

                    DoorFound = 0
                    DoorFrame[OpenInput] = 0
                    DoorFrame[TOpenInput] = 1
                end
            end

            if(OLS[2] == "lock") then
                if(DoorFound == 1) then
                    if(OLS[3] ~= nil) then
                        if(AimE:class() == "sbep_base_door" or AimE:class() == "sbep_base_door_controller") then
                            aiSay(sfowner,"Locking door ",ColGrn,OLS[3],ColOng," on that SBEP door")
                        end
                    else
                        aiSay(sfowner,"Locking that ",ColGrn,AimName)
                    end

                    DoorFound = 0
                    DoorFrame[LockInput] = 1
                end
            end

            if(OLS[2] == "unlock") then
                if(DoorFound == 1) then
                    if(OLS[3] ~= nil) then
                        if(OLS[3] ~= nil and AimE:class() == "sbep_base_door" or AimE:class() == "sbep_base_door_controller") then
                            aiSay(sfowner,"Unlocking door ",ColGrn,OLS[3],ColOng," on that SBEP door")
                        end
                    else
                        aiSay(sfowner,"Unlocking that ",ColGrn,AimName)
                    end

                    DoorFound = 0
                    DoorFrame[LockInput] = 0
                end
            end
        end

        --------------------
        ---Gate/Rings/Jam---
        --------------------
        if(CMD("closegate") or CMD("closeg")) then
            if(IsValid(wire.ports.Stargate:entity()) ~= true) then
                aiSay(sfowner,ColRed,"Stargate not linked!")
            else
                stargate.close(wire.ports.Stargate:entity())

                aiSay(sfowner,"Closing Stargate")
            end
        end

        if(CMD("dial")) then
            if(IsValid(Stargate) ~= true) then
                aiSay(sfowner,ColRed,"Stargate not linked!")
            else
                if(OLS[4] == nil) then
                    aiSay(sfowner,"You need to put in an address to dial!")
                elseif(#OLS[4] > 7 and stargate.localgate(wire.ports.Stargate:entity())) then
                    aiSay(sfowner,"Cannot dial outside of the local group")
                else
                    if(OLS[3] == nil) then
                        aiSay(sfowner,"Dial mode unset, defaulting to Fast Dial")
                        DialModeS = "fast"
                        DialMode = 0
                    end

                    if(#OLS[3] > 1) then
                        aiSay(sfowner,"Dial mode cannot be a string")
                    else
                        if(OLS[3] == "0") then
                            DialModeS = "Slow"
                            DialMode = 0
                        elseif(OLS[3] == "1") then
                            DialModeS = "Fast"
                            DialMode = 1
                        elseif(OLS[3] == "2") then
                            DialModeS = "Nox"
                            DialMode = 2
                        elseif(DialMode == nil) then
                            DialModeS = "Fast"
                            DialMode = 1
                            aiSay(sfowner,"Invalid Dialmode. Setting dialmode to Fast Dial")
                        else
                            DialModeS = "Fast"
                            DialMode = 1
                            aiSay(sfowner,"Invalid Dialmode. Setting dialmode to Fast Dial")
                        end

                        wire.ports.Stargate["Dial Mode"] = DialMode
                        wire.ports.Stargate["Dial String"] = OLS[4]

                        timer.simple(0.5,function()
                            wire.ports.Stargate["Start String Dial"] = 1
                        end)

                        timer.simple(1,function()
                            wire.ports.Stargate["Dial Mode"] = 0
                            wire.ports.Stargate["Dial String"] = ""
                            wire.ports.Stargate["Start String Dial"] = 0
                        end)

                        aiSay(sfowner,"Dialing the gate to: ",ColGrn,OLS[4],ColOng," with dialmode ",ColGrn,DialModeS)

                    end
                end
            end
        end

        if(CMD("gsend")) then
            if(IsValid(wire.ports.Stargate:entity()) ~= true) then
                aiSay(sfowner,ColRed,"Stargate not linked!")
            else
                if(stargate.open(wire.ports.Stargate:entity()) == 0) then
                    aiSay(sfowner,"Gate isn't open. Cannot send a message.")
                else
                    stargate.transmit(wire.ports.Stargate:entity(),message:sub(7+#Prefix))
                    aiSay(sfowner,"Message sent through gate: ",ColGrn,message:sub(7+#Prefix))
                end
            end
        end

        ---Rings---
        if(CMD("rdial")) then
            if(IsValid(wire.ports.Rings) ~= true) then
                aiSay(sfowner,ColRed,"Rings not linked!")
            else
                if(OLS[3] == nil) then
                    if(wire.ports.Rings["Usable"] == 0) then
                        aiSay(sfowner,"Rings ",ColRed,"Disabled",ColOng," cannot dial.")
                    else
                        wire.ports.Rings["Dial Closest"] = 1

                        timer.simple(0.5,function()
                            wire.ports.Rings["Dial Closest"] = 0
                        end)

                        aiSay(sfowner,"Dialing closest rings.")
                    end
                else
                    wire.ports.Rings["Dial Address"] = OLS[3]

                    timer.simple(0.5,function()
                        wire.ports.Rings["Dial Address"] = ""
                    end)

                    aiSay(sfowner,"Dialing rings to: ",ColGrn,OLS[3])
                end
            end
        end

        if(CMD("ron")) then
            if(IsValid(wire.ports.Rings) ~= true) then
                aiSay(sfowner,ColRed,"Rings not linked!")
            else
                wire.ports.Rings["UnUsable"] = 0
                aiSay(sfowner,"Rings Enabled")
            end
        end

        if(CMD("roff")) then
            if(IsValid(wire.ports.Rings) ~= true) then
                aiSay(sfowner,ColRed,"Rings not linked!")
            else
                wire.ports.Rings["UnUsable"] = 1
                aiSay(sfowner,"Rings Disabled")
            end
        end

        ---Jammer---
        if(CMD("jam")) then
            JamActive = notVar(JamActive)

            for k,v in pairs(Jammers) do
                v:getWirelink()["Activate"] = JamActive
            end

            if(JamActive == 1) then
                aiSay(sfowner,"Jamming Device ",ColGrn,"Enabled")
            else
                aiSay(sfowner,"Jamming Device ",ColRed,"Disabled")
            end
        end


        --------------------
        ---Weapon Control---
        --------------------
        if(CMD("wstrength")) then
            if(OLS[3] == nil or tonumber(OLS[3]) == nil or tonumber(OLS[3]) < 1) then
                aiSay(sfowner,"Current weapon strength is: ",ColGrn,wire.self().WepStrength)
            elseif(tonumber(OLS[3]) > 10) then
                for k,v in pairs(ShipWeapons) do
                    if(v:getWirelink():inputType("Strength") ~= nil) then
                        v:getWirelink()["Strength"] = 10
                    end
                end

                aiSay(sfowner,"Weapon Strength cannot go above ",ColGrn,"10",ColOng," Setting Weapon Strength to max")
            else
                for k,v in pairs(ShipWeapons) do
                    if(v:getWirelink():inputType("Strength") ~= nil) then
                        v:getWirelink()["Strength"] = tonumber(OLS[3])
                    end
                end

                aiSay(sfowner,"Weapon Strength set to: ",ColGrn,OLS[3])
            end
        end

        if(CMD("wrate")) then
            if(OLS[3] == nil or tonumber(OLS[3]) == nil or tonumber(OLS[3]) < 1) then
                aiSay(sfowner,"Current weapon fire rate is: ",ColGrn,wire.self().WepRate)
            elseif(tonumber(OLS[3]) > 10) then
                for k,v in pairs(ShipWeapons) do
                    if(v:getWirelink():inputType("Refire Rate") ~= nil) then
                        v:getWirelink()["Refire Rate"] = 10
                    end
                end

                aiSay(sfowner,"Weapon Fire Rate cannot go above ",ColGrn,"10",ColOng," Setting Weapon Fire Rate to max")
            else
                for k,v in pairs(ShipWeapons) do
                    if(v:getWirelink():inputType("Refire Rate") ~= nil) then
                        v:getWirelink()["Refire Rate"] = tonumber(OLS[3])
                    end
                end

                aiSay(sfowner,"Weapon Fire Rate set to: ",ColGrn,OLS[3])
            end
        end

        if(CMD("btype")) then
            if(OLS[3] == nil or tonumber(OLS[3]) ~= nil) then
                aiSay(sfowner,"You must enter a Beam Weapon Type")
            else
                if(BeamType[OLS[3]] ~= nil) then
                    for k,v in pairs(BeamEmitters) do
                        v:getWirelink()["Set Type"] = BeamType[OLS[3]]
                    end

                    aiSay(sfowner,"Beam Weapon Type changed to: ",ColGrn,OLS[3])
                else
                    aiSay(sfowner,"Unrecognized Beam Weapon Type: ",ColRed,OLS[3])
                end
            end
        end

        if(CMD("ttype")) then
            if(OLS[3] == nil or tonumber(OLS[3]) ~= nil) then
                aiSay(sfowner,"You must enter a Torpedo Weapon Type")
            else
                if(TorpType[OLS[3]] ~= nil) then
                    for k,v in pairs(TorpLaunchers) do
                        if(OLS[4] ~= "1" and v:getWirelink()["Type"] ~= "Tricobalt") then
                            v:getWirelink()["Set Type"] = TorpType[OLS[3]]
                        else
                            v:getWirelink()["Set Type"] = TorpType[OLS[3]]
                        end
                    end

                    aiSay(sfowner,"Torpedo Weapon Type changed to: ",ColGrn,OLS[3])
                else
                    aiSay(sfowner,"Unrecognized Torpedo Weapon Type: ",ColRed,OLS[3])
                end
            end
        end

        if(CMD("turtype")) then
            if(OLS[3] == nil or tonumber(OLS[3]) ~= nil) then
                aiSay(sfowner,"You must enter a Turret Weapon Type")
            else
                if(TurretType[OLS[3]] ~= nil) then
                    for k,v in pairs(ShipTurrets) do
                        v:getWirelink()["Set Type"] = TurretType[OLS[3]]
                    end

                    aiSay(sfowner,"Turret Weapon Type changed to: ",ColGrn,OLS[3])
                else
                    aiSay(sfowner,"Unrecognized Turret Weapon Type: ",ColRed,OLS[3])
                end
            end
        end

        if(CMD("fire")) then
            if(OLS[3] == nil) then
                wire.ports.Fire = wire.self().Fire == 0 and 1 or 0

                if(wire.self().Fire == 1 or TorpFire == 1 or BeamFire == 1 or TurFire == 1) then
                    TorpFire = 0
                    BeamFire = 0
                    TurFire = 0

                    for k,v in pairs(ShipWeapons) do
                        if(not IsValid(v)) then
                            table.remove(ShipWeapons,v) --delete removed weapons from the ship weapons table
                        else
                            v:getWirelink()["Fire"] = 0
                        end
                    end

                    aiSay(sfowner,"All Weapons ",ColRed,"Offline")
                else
                    TorpFire = 1
                    BeamFire = 1
                    TurFire = 1

                    for k,v in pairs(ShipWeapons) do
                        if(not IsValid(v)) then
                            table.remove(ShipWeapons,v) --delete removed weapons from the ship weapons table
                        else
                            v:getWirelink()["Fire"] = 1
                        end
                    end

                    aiSay(sfowner,"All Weapons ",ColGrn,"Online")
                end
            else
                if(OLS[3] == "torp" or OLS[3] == "torps") then
                    TorpFire = notVar(TorpFire)

                    for k,v in pairs(TorpLaunchers) do
                        if(not IsValid(v)) then
                            table.remove(TorpLaunchers,v) --delete removed weapons from the ship weapons table
                        else
                            v:getWirelink()["Fire"] = TorpFire
                        end

                    end

                    if(TorpFire == 1) then
                        aiSay(sfowner,"Torpedo Launchers ",ColGrn,"Online")
                    else
                        aiSay(sfowner,"Torpedo Launchers ",ColRed,"Offline")
                    end
                end

                if(OLS[3] == "beams" or OLS[3] == "phasers") then
                    BeamFire = notVar(BeamFire)

                    for k,v in pairs(BeamEmitters) do
                        if(not IsValid(v)) then
                            table.remove(BeamEmitters,v) --delete removed weapons from the ship weapons table
                        else
                            v:getWirelink()["Fire"] = BeamFire
                        end
                    end

                    if(BeamFire == 1) then
                        aiSay(sfowner,"Beam Emitters ",ColGrn,"Online")
                    else
                        aiSay(sfowner,"Beam Emitters ",ColRed,"Offline")
                    end
                end

                if(OLS[3] == "turrets" or OLS[3] == "tur") then
                    TurFire = notVar(TurFire)

                    for k,v in pairs(ShipTurrets) do
                        if(not IsValid(v)) then
                            table.remove(ShipTurrets,v) --delete removed weapons from the ship weapons table
                        else
                            v:getWirelink()["Fire"] = TurFire
                        end
                    end

                    if(TurFire == 1) then
                        aiSay(sfowner,"Ship Turrets ",ColGrn,"Online")
                    else
                        aiSay(sfowner,"Ship Turrets ",ColRed,"Offline")
                    end
                end
            end
        end

        if(CMD("emitters") or CMD("emit")) then
            if(IsValid(ShipCore) ~= true) then
                aiSay(sfowner,ColRed,"Ship Core not linked!")
            else
                if(ShipCoreW["Emitters Enabled"] == 0) then
                    ShipCoreW["Enable Emitters"] = 1
                    aiSay(sfowner,"Pulsar Emitters ",ColGrn,"Online")
                end

                if(ShipCoreW["Emitters Enabled"] == 1) then
                    ShipCoreW["Enable Emitters"] = 0
                    aiSay(sfowner,"Pulsar Emitters ",ColRed,"Offline")
                end
            end
        end

        if(CMD("taim")) then
            AimEF = sfowner:aimEntity()

            if(IsValid(AimEF)) then
                if(propprotection.isAllowedForEntity(AimEF,propprotection.ACCESS_TOOLGUN) == true) then
                    AimEFW = sfowner:aimEntity():getWirelink()

                    if(IsValid(AimEFW)) then
                        if(AimEFW:inputType("Fire") ~= nil) then
                            aiSay(sfowner,"Selecting that ",ColGrn,AimEF:getPrintName(),ColOng," as the testfire weapon")
                        else
                            aiSay(sfowner,"That ",ColRed,AimEF:getPrintName(),ColOng," does not have a Fire input")
                        end
                    else
                        aiSay(sfowner,"That ",ColRed,AimEF:class(),ColOng," does not have a Fire input")
                    end
                else
                    aiSay(sfowner,"You do not have Toolgun Permissions for that ",ColRed,AimEF:class())
                end
            else
                aiSay(sfowner,"You're not looking at anything")
            end
        end

        if(CMD("tfire")) then
            if(IsValid(AimEF) and IsValid(AimEFW)) then
                if(propprotection.isAllowedForEntity(AimEF,propprotection.ACCESS_TOOLGUN) == true) then
                    AimEFW["Fire"] = 1

                    aiSay(sfowner,"Testfiring the ",ColGrn,AimEF:getPrintName())

                    timer.simple(2.5,function()
                        AimEFW["Fire"] = 0
                    end)
                else
                    aiSay(sfowner,"You do not have Toolgun Permissions for that ",ColRed,AimEF:class())
                end
            else
                aiSay(sfowner,"You have not selected anything to fire")
            end
        end

        if(CMD("ctarget")) then
            if(IsValid(ShipCore) ~= true) then
                aiSay(sfowner,ColRed,"Ship Core not linked!")
            else
                if(OLS[3] == nil) then
                    aiSay(sfowner,ColRed,"You must enter a player's name!")
                else
                    local Ply = find.playerByName(OLS[3])

                    if(IsValid(Ply) and Ply:isPlayer()) then
                        local PlyCol = Ply:getTeamColor()

                        ShipCoreW:entity():addTarget(Ply:steamID())

                        aiSay(sfowner,"Targetting ",PlyCol,Ply:name(),ColOng," with the Pulsar Emitters")
                    else
                        aiSay(sfowner,ColRed,OLS[3]," Is not a player.")
                    end
                end
            end
        end

        if(CMD("cuntarget")) then
            if(IsValid(ShipCore) ~= true) then
                aiSay(sfowner,ColRed,"Ship Core not linked!")
            else
                if(OLS[3] == nil) then
                    aiSay(sfowner,ColRed,"You must enter a player's name!")
                else
                    local Ply = find.playerByName(OLS[3])

                    if(IsValid(Ply) and Ply:isPlayer()) then
                        local PlyCol = Ply:getTeamColor()

                        ShipCoreW:entity():removeTarget(Ply:steamID())

                        aiSay(sfowner,"Un-Targetting ",PlyCol,Ply:name(),ColOng," with the Pulsar Emitters")
                    else
                        aiSay(sfowner,ColRed,OLS[3]," Is not a player.")
                    end
                end
            end
        end
    end

    ----------
    ---Warp---
    ----------
    if(OLS[1] == WarpPrefix) then
        if(IsValid(wire.ports.Drive) ~= true) then
            aiSay(sfowner,ColRed,"Warp Drive not linked!")
        else
            WarpF = 0

            if(OLS[2] == "locations" or OLS[2] == "help" or OLS[2] == "loc") then
                WarpF = 1

                aiSay(sfowner,"Warp Locations:")
                --aiSay(sfowner,"Milk, Earth, Moon, Pegasus, Shakur, Shakbase, Universe, Unicorner, Hiigara, Hiibase, Desert, Lava, Members, Build, Build2, Build3, Build4")
                aiSay(sfowner,table.concatKeys(WarpLoc,", "))
            end

            if(OLS[2] == "vector" or OLS[2] == "vec") then
                if(OLS[3] == nil) then
                    aiSay(sfowner,"Cannot warp the ship nowhere.")
                else
                    WarpF = 1

                    local V = OLS[3]:explode(",")

                    if(tonumber(V[1]) ~= nil and tonumber(V[2]) ~= nil and tonumber(V[3]) ~= nil) then
                        local X = math.round(tonumber(V[1]))
                        local Y = math.round(tonumber(V[2]))
                        local Z = math.round(tonumber(V[3]))

                        local Dest = Vector(X,Y,Z)
                        local AngleOffset = Angle(0,0,0)

                        warp(Dest,AngleOffset)

                        aiSay(sfowner,"Warping to vector: [",ColGrn,X,",",Y,",",Z,ColOng,"]")
                    end
                end
            end

            if(OLS[2] == "angle" or OLS[2] == "ang") then
                if(OLS[3] == nil) then
                    aiSay(sfowner,"Cannot rotate the ship to nothing")
                else
                    if(OLS[3] == "reset") then
                        WarpF = 1

                        local AngOffset = wire.ports.Drive:entity():toLocal(Angle(0,0,0)) + DriveOffset
                        local Dest = wire.ports.Drive:entity():pos()

                        aiSay(sfowner,"Resetting ship angles")

                        warp(Dest,AngOffset)
                    else
                        WarpF = 1

                        local V = OLS[3]:explode(",")

                        if(tonumber(V[1]) ~= nil and tonumber(V[2]) ~= nil and tonumber(V[3]) ~= nil) then
                            local X = math.round(tonumber(V[1]))
                            local Y = math.round(tonumber(V[2]))
                            local Z = math.round(tonumber(V[3]))

                            local AngOffset = Angle(X,Y,Z)
                            local Dest = wire.ports.Drive:entity():pos()

                            warp(Dest,AngOffset)

                            aiSay(sfowner,"Rotating to Angle Offset: [",ColGrn,X,",",Y,",",Z,ColOng,"]")
                        end
                    end
                end
            end

            if(OLS[2] == "forward" or OLS[2] == "back" or OLS[2] == "left" or OLS[2] == "right" or OLS[2] == "up" or OLS[2] == "down") then
                if(OLS[3] == nil and OLS[2] ~= "back") then
                    LWarp = 1

                    aiSay(sfowner,"Cannot warp nowhere")

                    timer.simple(1,function()
                        LWarp = 0
                    end)
                else
                    LWarp = 0

                    if(OLS[2] == "forward" and LWarp == 0) then
                        WarpF = 1

                        aiSay(sfowner,"Warping Forward by ",ColGrn,tonumber(OLS[3]))

                        Dest = wire.ports.Drive:entity():pos() + Vector(tonumber(OLS[3]),0,0)
                    end

                    if(OLS[2] == "back") then
                        WarpF = 1

                        if(OLS[3] == nil) then
                            aiSay(sfowner,"Warping to previous position: [",ColGrn,string.format("%d,%d,%d",PrevPos.x,PrevPos.y,PrevPos.z),ColOng,"]")

                            Dest = PrevPos
                        elseif(tonumber(OLS[3]) ~= nil) then
                            aiSay(sfowner,"Warping Back by ",ColGrn,tonumber(OLS[3]))

                            Dest = wire.ports.Drive:entity():pos() - Vector(tonumber(OLS[3]),0,0)
                        end
                    end

                    if(OLS[2] == "left" and LWarp == 0) then
                        WarpF = 1

                        aiSay(sfowner,"Warping Left by ",ColGrn,tonumber(OLS[3]))

                        Dest = wire.ports.Drive:entity():pos() + Vector(0,tonumber(OLS[3]),0)
                    end

                    if(OLS[2] == "right" and LWarp == 0) then
                        WarpF = 1

                        aiSay(sfowner,"Warping Right by ",ColGrn,tonumber(OLS[3]))

                        Dest = wire.ports.Drive:entity():pos() - Vector(0,tonumber(OLS[3]),0)
                    end

                    if(OLS[2] == "up" and LWarp == 0) then
                        WarpF = 1

                        aiSay(sfowner,"Warping Up by ",ColGrn,tonumber(OLS[3]))

                        Dest = wire.ports.Drive:entity():pos() + Vector(0,0,tonumber(OLS[3]))
                    end

                    if(OLS[2] == "down" and LWarp == 0) then
                        WarpF = 1

                        aiSay(sfowner,"Warping Down by ",ColGrn,tonumber(OLS[3]))

                        Dest = wire.ports.Drive:entity():pos() - Vector(0,0,tonumber(OLS[3]))
                    end

                    timer.simple(0.2,function()
                        if(LWarp == 0 and WarpF == 1) then
                            local AngleOffset = Angle(0,0,0)
                            warp(Dest,AngleOffset)
                        end
                    end)
                end
            end

            if(WarpF == 0) then
                if(OLS[2] == nil) then
                    aiSay(sfowner,"Cannot warp to noone or nowhere")
                else

                    local Ply = find.playerByName(OLS[2])

                    if(IsValid(Ply) and Ply:isPlayer()) then
                        WarpF = 1
                        PlyCol = Ply:getTeamColor()

                        local Dest = Ply:pos()
                        local AngleOffset = Angle(0,0,0)

                        warp(Dest,AngleOffset)

                        aiSay(sfowner,"Warping to Player: ",PlyCol,Ply:name())
                    elseif(WarpLoc[OLS[2]] ~= nil) then
                        WarpF = 1

                        local Dest = WarpLoc[OLS[2]]
                        local AngleOffset = Angle(0,0,0)

                        warp(Dest,AngleOffset)

                        aiSay(sfowner,"Warping to location: ",ColGrn,OLS[2])
                    else
                        aiSay(sfowner,"Cannot warp to: ",ColRed,OLS[2])
                    end
                end
            end
        end
    end

    if(OLS[1] == Prefix) then
        if(CMD("wspeed")) then
            if(IsValid(wire.ports.Drive) ~= true) then
                aiSay(sfowner,ColRed,"Warp Drive not linked!")
            else
                if(OLS[3] == nil or tonumber(OLS[3]) == nil or tonumber(OLS[3]) < 0) then
                    aiSay(sfowner,"Invalid number specified. Current Warp Factor is: ",ColGrn,wire.self().WarpFactor)
                elseif(tonumber(OLS[3]) > 10) then
                    wire.ports.WarpFactor = 10
                    aiSay(sfowner,"Warp Factor cannot go above ",ColGrn,"9.975",ColOng," Setting Warp Factor to max")
                else
                    wire.ports.WarpFactor = tonumber(OLS[3])
                    aiSay(sfowner,"Warp Factor set to: ",ColGrn,OLS[3])
                end
            end
        end

        ----------------
        ---Drive Core---
        ----------------
        if(CMD("cspeed")) then
            if(IsValid(DriveCore) ~= true) then
                aiSay(sfowner,ColRed,"Drive Core not linked!")
            else
                if(OLS[3] == nil or tonumber(OLS[3]) == nil or tonumber(OLS[3]) < 0) then
                    aiSay(sfowner,"Invalid number specified. Current Drive Core Speed is: ",ColGrn,DCoreSpeed)
                elseif(tonumber(OLS[3]) > 2) then
                    DCoreSpeed = 2
                    DriveCoreW["Speed Multiplier"] = DCoreSpeed

                    aiSay(sfowner,"Drive Core Speed cannot go above ",ColGrn,"2",ColOng," Setting Drive Core Speed to max")
                else
                    DCoreSpeed = tonumber(OLS[3])
                    DriveCoreW["Speed Multiplier"] = DCoreSpeed

                    aiSay(sfowner,"Drive Core Speed set to: ",ColGrn,DCoreSpeed)
                end
            end
        end

        if(CMD("ctspeed")) then
            if(IsValid(DriveCore) ~= true) then
                aiSay(sfowner,ColRed,"Drive Core not linked!")
            else
                if(OLS[3] == nil or tonumber(OLS[3]) == nil or tonumber(OLS[3]) < 0) then
                    aiSay(sfowner,"Invalid number specified. Current Drive Core Turnspeed is: ",ColGrn,DCoreTSpeed)
                elseif(tonumber(OLS[3]) > 2) then
                    DCoreTSpeed = 2
                    DriveCoreW["Turn Rate Multiplier"] = DCoreTSpeed

                    aiSay(sfowner,"Drive Core Turnspeed cannot go above ",ColGrn,"2",ColOng," Setting Drive Core Turnspeed to max")
                else
                    DCoreTSpeed = tonumber(OLS[3])
                    DriveCoreW["Turn Rate Multiplier"] = DCoreTSpeed

                    aiSay(sfowner,"Drive Core Turnspeed set to: ",ColGrn,DCoreTSpeed)
                end
            end
        end

        ----------------
        ---Calculator---
        ----------------
        if(CMD("calc")) then
            if(tonumber(OLS[3]) == nil or tonumber(OLS[5]) == nil or OLS[3] == nil or OLS[5] == nil) then
                aiSay(sfowner,ColRed,"NaN",ColOng," used as input, cannot calculate")
            elseif(OLS[4] == "+") then
                aiSay(sfowner,"Calc: ",ColGrn,tonumber(OLS[3]) + tonumber(OLS[5]))
            elseif(OLS[4] == "-") then
                aiSay(sfowner,"Calc: ",ColGrn,tonumber(OLS[3]) - tonumber(OLS[5]))
            elseif(OLS[4] == "*" or OLS[4] == "x") then
                aiSay(sfowner,"Calc: ",ColGrn,tonumber(OLS[3]) * tonumber(OLS[5]))
            elseif(OLS[4] == "/") then
                aiSay(sfowner,"Calc: ",ColGrn,tonumber(OLS[3]) / tonumber(OLS[5]))
            elseif(OLS[4] == "^") then
                aiSay(sfowner,"Calc: ",ColGrn,tonumber(OLS[3]) ^ tonumber(OLS[5]))
            end
        end

        -------------------
        ---Distress Call---
        -------------------
        if(CMD("distress")) then
            if(IsValid(ShipCore) ~= true) then
                aiSay(sfowner,ColRed,"Ship Core not linked!")
            elseif(IsValid(Shield) ~= true) then
                aiSay(sfowner,ColRed,"Shield Emitter not linked!")
            else
                DistressLoc = getCurrentEnvironment(ShipCoreW:entity())

                if(ShieldW:entity():class() == "atlantis_shield_emitter") then
                    ShieldCurEng = ShieldW["Current Energy"]
                    ShieldMaxEng = ShieldW["Max Energy"]
                elseif(ShieldW:entity():class() == "st_shield_emitter") then
                    ShieldCurEng = ShieldW["Total Charge"]
                    ShieldMaxEng = ShieldW["Max Charge"]
                end

                SH = math.round(ShieldCurEng / ShieldMaxEng * 100)
                CP = math.round(ShipCoreW["Plating"])
                HP = math.round(ShipCoreW["Health"] / ShipCoreW["Max Health"] * 100)

                chat.sayAlliance(ColTeam,"[AI]",ColPink," [",AIName,"] ",ColOng,"Distress Call initiated from ",ZeiaMBlu,Shipname)

                timer.simple(3,function()
                    chat.sayAlliance(ColTeam,"[AI]",ColPink," [",AIName,"] ",ColOng,"Distress Location: ",ColGrn,DistressLoc,ColOng," Shields at: ",ColGrn,SH,ColOng,"% Plating at: ",ColGrn,CP,ColOng,"% Hull at: ",ColGrn,HP,ColOng,"%")
                end)

            end
        end
    end
end, sfowner)

        -----------------
        ---Transporter---
        -----------------

chat.listen(function(message, player)
    local OLS = message:lower():explode(" ", true)

    if(OLS[1] == TPPrefix) then
        if(IsValid(wire.ports.Transporter) ~= true) then
            aiSay(sfowner,ColRed,"Transporter not linked!")
        else
            if(OLS[2] == "help" or OLS[2] == "loc" or OLS[2] == "locations") then
                aiSay(sfowner,"Transport Locations:")
                --aiSay(sfowner,"Earth, SGC, Moon, Shakur, Shakbase, Station, Hiigara, Hiibase, Desert, Pyramid, Pyramidbase, Lava, Lavabase, Hell, Space")
                aiSay(sfowner,table.concatKeys(TransportLoc,", "))
            end

            if(OLS[2] == "beamup") then
                if(OLS[3] == nil or OLS[3] == "me") then
                    if(jamCheck(sfowner,sfowner:pos(),1) == 0) then
                        aiSay(sfowner,"Beaming",ColTeam," You ",ColOng,"to the pad")

                        transport(sfowner,Vector(0,0,0),"beamup")
                    end
                end

                if(OLS[3] == "this" or OLS[3] == "that") then
                    AimET = sfowner:aimEntity()

                    if(IsValid(AimET) ~= true) then
                        aiSay(sfowner,ColRed,"You're not aiming at anything!")
                    else
                        if(AimET:isPlayer()) then
                            BeamName = AimET:name()
                        else
                            if(AimET:getPrintName() == nil) then
                                BeamName = AimET:class()
                            else
                                BeamName = AimET:getPrintName()
                            end
                        end

                        if(jamCheck(AimET,AimET:pos(),1) == 0) then
                            transport(AimET,Vector(0,0,0),"beamup")

                            timer.simple(0.1,function()
                                if(wire.ports.Transporter:entity():class() == "transporter_pad") then
                                    if(wire.ports.Transporter["Energising"] == 0) then
                                        aiSay(sfowner,"Cannot beam that ",ColRed,BeamName,ColOng," to the pad. It is likely too large.")
                                    else
                                        if(AimET:isPlayer()) then
                                            aiSay(sfowner,"Beaming ",AimET:getTeamColor(),BeamName,ColOng," to the pad.")
                                        else
                                            aiSay(sfowner,"Beaming that ",ColGrn,BeamName,ColOng," to the pad.")
                                        end
                                    end
                                end

                                if(wire.ports.Transporter:entity():class() == "asgard_transporter") then
                                    if(wire.ports.Transporter["Transporting"] == 0) then
                                        aiSay(sfowner,"Cannot beam that ",ColRed,BeamName,ColOng," to the transporter. It is likely too large.")
                                    else
                                        if(AimET:isPlayer()) then
                                            aiSay(sfowner,"Beaming ",AimET:getTeamColor(),BeamName,ColOng," to the transporter.")
                                        else
                                            aiSay(sfowner,"Beaming that ",ColGrn,BeamName,ColOng," to the transporter.")
                                        end
                                    end
                                end
                            end)
                        end
                    end
                end

                if(OLS[3] ~= nil and OLS[3] ~= "this" and OLS[3] ~= "that" and OLS[3] ~= "me") then
                    local Ply = find.playerByName(OLS[3])

                    if(IsValid(Ply) and Ply:isPlayer()) then
                        if(jamCheck(Ply,Ply:pos(),1) == 0) then
                            transport(Ply,Vector(0,0,0),"beamup")

                            aiSay(sfowner,"Beaming ",Ply:getTeamColor(),Ply:name(),ColOng," to the pad")
                        end
                    else
                        aiSay(sfowner,"There is no player with the name: ",ColRed,OLS[3])
                    end
                end
            end

            if(OLS[2] == "beamdown") then
                if(OLS[3] == nil or OLS[3] == "me") then
                    if(jamCheck(sfowner,sfowner:pos(),1) == 0) then
                        aiSay(sfowner,"Beaming down to",ColTeam," You")

                        transport(ents.NULL_ENTITY,sfowner:pos(),"beamdown")
                    end
                end

                if(OLS[3] == "core") then
                    if(OLS[4] == nil) then
                        aiSay(sfowner,ColRed,"You must put a player's core to target")
                    else
                        local Ply = find.playerByName(OLS[4])

                        if(IsValid(Ply) and Ply:isPlayer()) then
                            local Cores = find.byClass("ship_core", function(ent)
                                if(ent:owner() == Ply) then
                                    return true
                                end
                            end)

                            if(#Cores > 0) then
                                local Core = Cores[1]
                                if(jamCheck(Core,Core:pos(),1) == 0) then
                                    aiSay(sfowner,"Beaming down to ",Ply:getTeamColor(),Ply:name(),"'s ",ColGrn,"Ship Core")

                                    transport(ents.NULL_ENTITY,Core:pos()+Vector(100,0,0),"beamdown")
                                end
                            else
                                aiSay(sfowner,Ply:getTeamColor(),Ply:name(),ColOng," does not have a ",ColRed,"Ship Core!")
                            end
                        else
                            aiSay(sfowner,"There is no player with the name ",ColRed,OLS[4])
                        end
                    end
                end

                if(OLS[3] == "pad") then
                    if(OLS[4] == nil) then
                        aiSay(sfowner,ColRed,"You must put a player's pad to target")
                    else
                        local Ply = find.playerByName(OLS[4])

                        if(IsValid(Ply) and Ply:isPlayer()) then
                            local Pads = find.byClass("transporter_pad", function(ent)
                                if(ent:owner() == Ply) then
                                    return true
                                end
                            end)

                            if(#Pads > 0) then
                                local Pad = Pads[1]
                                if(jamCheck(Pad,Pad:pos(),1) == 0) then
                                    aiSay(sfowner,"Beaming down to ",Ply:getTeamColor(),Ply:name(),"'s ",ColGrn,"Transporter Pad")

                                    transport(ents.NULL_ENTITY,Pad:pos()+Vector(0,0,10),"beamdown")
                                end
                            else
                                aiSay(sfowner,Ply:getTeamColor(),Ply:name(),ColOng," does not have a ",ColRed,"Transporter Pad!")
                            end
                        else
                            aiSay(sfowner,"There is no player with the name ",ColRed,OLS[4])
                        end
                    end
                end

                if(OLS[3] ~= nil and OLS[3] ~= "me" and OLS[3] ~= "core" and OLS[3] ~= "pad") then
                    local Ply = find.playerByName(OLS[3])

                    if(IsValid(Ply)) then
                        if(jamCheck(Ply,Ply:pos(),1) == 0) then
                            aiSay(sfowner,"Beaming down to ",Ply:getTeamColor(),Ply:name())

                            transport(ents.NULL_ENTITY,Ply:pos(),"beamdown")
                        end
                    elseif(TransportLoc[OLS[3]] ~= nil) then
                        if(jamCheck(ents.NULL_ENTITY,TransportLoc[OLS[3]],1) == 0) then
                            aiSay(sfowner,"Beaming down to ",ColGrn,OLS[3])

                            transport(ents.NULL_ENTITY,TransportLoc[OLS[3]],"beamdown")
                        end
                    else
                        aiSay(sfowner,"There is no player or location with the name: ",ColRed,OLS[3])
                    end
                end
            end

            if(OLS[2] == "beam") then
                if(OLS[3] == "me") then
                    BeamFrom = sfowner
                    BeamName = "You"
                end

                if(OLS[3] == nil) then
                    aiSay(sfowner,"You must put in someone or something to beam.")
                else
                    if(OLS[4] == nil) then
                        aiSay(sfowner,"You must put in someone or somewhere to beam to.")
                    else
                        if(IsValid(find.playerByName(OLS[3])) and find.playerByName(OLS[3]):isPlayer() and OLS[3] ~= "me") then
                            BeamFrom = find.playerByName(OLS[3])
                            BeamName = find.playerByName(OLS[3]):name()
                        end

                        if(IsValid(find.playerByName(OLS[4])) and find.playerByName(OLS[4]):isPlayer()) then
                            BeamTo = find.playerByName(OLS[4])

                            if(jamCheck(BeamFrom,BeamFrom:pos(),0) == 0 and jamCheck(BeamTo,BeamTo:pos(),0) == 0) then
                                aiSay(sfowner,"Beaming ",BeamFrom:getTeamColor(),BeamName,ColOng," to ",BeamTo:getTeamColor(),BeamTo:name())

                                transport(BeamFrom,BeamTo:pos()+Vector(100,0,0),"vector")
                            end
                        end --I would really like a player valid check here, but it would print if you used any of the other beams

                        if(OLS[4] == "core") then
                            if(OLS[5] == nil) then
                                aiSay(sfowner,ColRed,"You must put a player's core to target")
                            else
                                local Ply = find.playerByName(OLS[5])

                                if(IsValid(Ply) and Ply:isPlayer()) then
                                    local Cores = find.byClass("ship_core", function(ent)
                                        if(ent:owner() == Ply) then
                                            return true
                                        end
                                    end)

                                    if(#Cores > 0) then
                                        local Core = Cores[1]
                                        if(jamCheck(Core,Core:pos(),1) == 0) then
                                            aiSay(sfowner,"Beaming ",BeamFrom:getTeamColor(),BeamName,ColOng," to ",Ply:getTeamColor(),Ply:name(),"'s ",ColGrn,"Ship Core")

                                            transport(BeamFrom,Core:pos()+Vector(100,0,0),"vector")
                                        end
                                    else
                                        aiSay(sfowner,Ply:getTeamColor(),Ply:name(),ColOng," does not have a ",ColRed,"Ship Core!")
                                    end
                                else
                                    aiSay(sfowner,"There is no player with the name ",ColRed,OLS[5])
                                end
                            end
                        end

                        if(OLS[4] == "pad") then
                            if(OLS[5] == nil) then
                                aiSay(sfowner,ColRed,"You must put a player's pad to target")
                            else
                                local Ply = find.playerByName(OLS[5])

                                if(IsValid(Ply) and Ply:isPlayer()) then
                                    local Pads = find.byClass("transporter_pad", function(ent)
                                        if(ent:owner() == Ply) then
                                            return true
                                        end
                                    end)

                                    if(#Pads > 0) then
                                        local Pad = Pads[1]

                                        if(jamCheck(Pad,Pad:pos(),1) == 0) then
                                            aiSay(sfowner,"Beaming ",BeamFrom:getTeamColor(),BeamName,ColOng," to ",Ply:getTeamColor(),Ply:name(),"'s ",ColGrn,"Transporter Pad")

                                            transport(BeamFrom,Pad:pos()+Vector(0,0,10),"vector")
                                        end
                                    else
                                        aiSay(sfowner,Ply:getTeamColor(),Ply:name(),ColOng," does not have a ",ColRed,"Transporter Pad!")
                                    end
                                else
                                    aiSay(sfowner,"There is no player with the name ",ColRed,OLS[5])
                                end
                            end
                        end

                        if(OLS[4] == "brig" or OLS[4] == "jail" or OLS[4] == "babyjail") then
                            if(OLS[3] == nil) then
                                aiSay(sfowner,"Cannot beam noone to the brig")
                            else
                                local Ply = find.playerByName(OLS[3])

                                if(IsValid(wire.ports.Transporter) ~= true) then
                                    aiSay(sfowner,"Transporter not linked, cannot send ",Ply:getTeamColor(),Ply:name()," to the brig.")
                                else
                                    if(Ply:isPlayer()) then
                                        transport(Ply,wire.ports.BrigEnt:pos()+Vector(0,0,-50),"vector")

                                        if(OLS[4] == "brig") then
                                            aiSay(sfowner,"Beaming Player: <",Ply:getTeamColor(),Ply:name(),ColOng,"> to the brig")
                                        end

                                        if(OLS[4] == "jail") then
                                            aiSay(sfowner,"Beaming Player: <",Ply:getTeamColor(),Ply:name(),ColOng,"> to the jail")
                                        end

                                        if(OLS[4] == "babyjail") then
                                            aiSay(sfowner,"Beaming Player: <",Ply:getTeamColor(),Ply:name(),ColOng,"> to the ",Color(255,0,0),"g",Color(255,139,0),"a",Color(232,255,0),"y ",Color(93,255,0),"b",Color(0,255,46),"a",Color(0,255,185),"b",Color(0,185,255),"y ",Color(0,46,255),"j",Color(93,0,255),"a",Color(232,0,255),"i",Color(255,0,139),"l")
                                            aiSay(Ply,Ply:getTeamColor(),"You",ColOng," have been sent to the ",Color(255,0,0),"g",Color(255,139,0),"a",Color(232,255,0),"y ",Color(93,255,0),"b",Color(0,255,46),"a",Color(0,255,185),"b",Color(0,185,255),"y ",Color(0,46,255),"j",Color(93,0,255),"a",Color(232,0,255),"i",Color(255,0,139),"l")
                                        end
                                    else
                                        aiSay(sfowner,"There is no player with the name: ",ColRed,OLS[3])
                                    end
                                end
                            end
                        end

                        if(TransportLoc[OLS[4]] ~= nil) then
                            if(BeamFrom == nil) then
                                aiSay(sfowner,"There is no player with the name: ",ColRed,OLS[3])
                            else
                                if(jamCheck(BeamFrom,BeamFrom:pos(),0) == 0 and jamCheck(ents.NULL_ENTITY,TransportLoc[4],0) == 0) then
                                    aiSay(sfowner,"Beaming ",BeamFrom:getTeamColor(),BeamName,ColOng," to ",ColGrn,OLS[4])

                                    transport(BeamFrom,TransportLoc[OLS[4]],"vector")
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end, sfowner)

chat.listen(function(message, player) --Targetting
    local OLS = message:lower():explode(" ", true)

    if(OLS[1] == TargetPrefix) then
        if(OLS[2] == "help") then
            aiSay(sfowner,"You can find the Targetting commands on page 15 here: https://docs.google.com/document/d/1O2u7H4LFrC73PP-RpSY7yRGR4XEydbntwioRyLWV7Gk/edit?usp=sharing")
        elseif(OLS[2] == "list") then
            aiSay(sfowner,"Target List: \n",table.concatKeys(TarType,", "))
        elseif(OLS[2] == "this" or OLS[2] == "that") then
            if(IsValid(sfowner:aimEntity())) then
                TargetWeps(sfowner:aimEntity(),1,Vector(0,0,0))
            else
               aiSay(sfowner,"You're not looking at anything!")
            end
        elseif(OLS[2] == "here") then
            TargetWeps(ents.self(),1,sfowner:aimPos())
        elseif(OLS[2] == "next") then
            if(WepTargets ~= nil and #WepTargets > 0) then
                TarTableIndex = TarTableIndex+1

                TargetWeps(WepTargets[TarTableIndex],1,Vector(0,0,0))
            else
                aiSay(sfowner,"You're not targetting anything, cannot switch to next target.")
            end
        elseif(OLS[2] == "off") then
            wire.ports.TargetEnt = ents.NULL_ENTITY
            wire.ports.TargetPos = Vector(0,0,0)
            wire.ports.TargetLocked = 0

            for k,v in pairs(ShipWeapons) do
                if(not IsValid(v)) then
                    table.remove(ShipWeapons,v) --delete removed weapons from the ship weapons table
                else
                    local WepW = v:getWirelink()

                    if(WepW:inputType("Target") ~= nil) then
                        WepW["Target"] = Vector(0,0,0)
                    end
                end
            end

            if(timer.exists("tarcheck")) then
                timer.remove("tarcheck")
            end

            aiSay(sfowner,"Disabling Targetting")
        elseif(OLS[2] == "lead") then
            TargetLeading = notVar(TargetLeading)
            wire.ports.TargetLeading = TargetLeading

            if(TargetLeading == 1) then
                aiSay(sfowner,ColGrn,"Enabling ",ColOng,"Target Leading")
            else
                aiSay(sfowner,ColRed,"Disabling ",ColOng,"Target Leading")
            end
        elseif(OLS[2] == "aim") then
            AimFixed = notVar(AimFixed)

            if(AimFixed == 1) then
                aiSay(sfowner,ColGrn,"Enabling ",ColOng,"Fixed Weapon Aiming")
            else
                aiSay(sfowner,ColRed,"Disabling ",ColOng,"Fixed Weapon Aiming")
            end
        else
            if(OLS[2] ~= nil) then
                WepTarPly = find.playerByName(OLS[2])
            end

            if(OLS[3] ~= nil) then
                WepTarPly2 = find.playerByName(OLS[3])
            end

            if(IsValid(WepTarPly) and WepTarPly:isPlayer()) then
                TargetWeps(WepTarPly,1,Vector(0,0,0))
            else
                if(IsValid(WepTarPly2) and WepTarPly2:isPlayer()) then
                    if(TarType[OLS[2]] ~= nil) then
                        WepTargets = find.byClass(TarType[OLS[2]],function(ent)
                            if(ent:owner() == WepTarPly2) then
                                return true
                            else
                                return false
                            end
                        end)
                    else
                        WepTargets = find.byClass(OLS[2],function(ent)
                            if(ent:owner() == WepTarPly2) then
                                return true
                            else
                                return false
                            end
                        end)
                    end

                    local Tar = table.remove(WepTargets,1)

                    if(IsValid(Tar)) then
                        TarTableIndex = 1

                        TargetWeps(Tar,1,Vector(0,0,0))
                    else
                        aiSay(sfowner,"The Player ",WepTarPly2:getTeamColor(),WepTarPly2:name(),ColOng," Does not own a ",ColRed,OLS[2])
                    end
                else
                    aiSay(sfowner,"There is no player by the name ",ColRed,OLS[3])
                end
            end
        end
    end
end, sfowner)

end --end for if SERVER at the top